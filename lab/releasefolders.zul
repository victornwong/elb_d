<?xml version="1.0" encoding="UTF-8"?>
<?page id="release_folders_mod"?>
<zk>
<zscript src="../alsglobal/alsglobaldefs.zs" />
<zscript src="../alsglobal/alsglobalfuncs.zs" />
<zscript src="../alsglobal/alsglobal_guifuncs.zs" />
<zscript src="../alsglobal/alsglobal_sqlfuncs.zs" />
<zscript src="../alsglobal/securityfuncs.zs" />
<zscript src="../alsglobal/samplereg_funcs.zs" />
<zscript src="../alsglobal/doculink_funcs.zs" />

<zscript>
<![CDATA[
/*
Title: Folders browser for all users to find stuff
Written by: Victor Wong

**NOTES**

*/

myincludeid = Executions.getCurrent().getParameter("myid");

useraccessobj = getUserAccessObject();
if(useraccessobj == null) Executions.sendRedirect(MAINLOGIN_PAGE);

// check usergroup access - no access, just close the panel.. min. level 1 can browser through the folder/job list
boolean can_access = check_UsergroupAccess(useraccessobj.origid,SAMPREG_USERGROUP,4);

if(!can_access)
{
	showAccessDenied_Box(useraccessobj);
	globalClosePanel(myincludeid);
}

documentLinkObj documentLinkProp = new documentLinkObj();

global_selected_folder = "";

void localPlayDriller()
{
	if(!check_ListboxExist_SelectItem(folders_searchdiv,"folderjobs_lb")) return;
	ifolderno = folderjobs_lb.getSelectedItem().getLabel();
	theparam = "folderno=" + ifolderno;
	uniqwindowid = makeRandomId("xdx");
	globalActivateWindow("miscwindows","samplereg/folderjobs_driller.zul", uniqwindowid, theparam, useraccessobj);
	
	//view_resultsheet.zul
}

void viewResultsWorksheet()
{
	if(!check_ListboxExist_SelectItem(folders_searchdiv,"folderjobs_lb")) return;

	ifolderno = folderjobs_lb.getSelectedItem().getLabel();
	extfold = extractFolderNo(ifolderno);
	extfold = Integer.parseInt(extfold).toString();

	theparam = "folder_no=" + extfold;
	uniqwindowid = makeRandomId("xvwx");
	globalActivateWindow("miscwindows","reporting/view_resultsheet.zul", uniqwindowid, theparam, useraccessobj);
}

// onSelect event for makeALSTestParametersListbox()
class folderjobslb_Listener implements org.zkoss.zk.ui.event.EventListener
{
	public void onEvent(Event event) throws UiException
	{
		Listbox selectedone = event.getTarget();
		selitem = selectedone.getSelectedItem();
		global_selected_folder = getListcellItemLabel(selitem,0);

		customername = getListcellItemLabel(selitem,3);
		foldercustomername.setValue(global_selected_folder + " : " + customername);

		divisionBreakdown_clicker();
		
		resultsheet_btn.setVisible(true);
		releasefolder_btn.setVisible(true);
		
		//viewFolderTests_clicker();
	}
}

// Do the search and populate listbox
void startFolderJobsSearch()
{
	Object[] folders_lb_headers = {
	new listboxHeaderObj("FolderNo",true),
	new listboxHeaderObj("RecvDate",true),
	new listboxHeaderObj("DueDate",true),
	new listboxHeaderObj("Customer",true),
	new listboxHeaderObj("Lab.Stat",true),
	new listboxHeaderObj("Rel.By",true),
	new listboxHeaderObj("Rel.Date",true),
	new listboxHeaderObj("COA.Date",true),
	new listboxHeaderObj("Bch",true),
	};

	sdate = getDateFromDatebox(startdate);
    edate = getDateFromDatebox(enddate);
	cnm = customer_tb.getValue();
	
	sqlstm = "select top 200 jobfolders.origid, jobfolders.folderno_str, jobfolders.datecreated, jobfolders.duedate, jobfolders.ar_code, jobfolders.labfolderstatus, " +
	"jobfolders.releasedby, jobfolders.releaseddate, jobfolders.coadate, jobfolders.branch, customer.customer_name from jobfolders " +
	"left join customer on jobfolders.ar_code=customer.ar_code " +
	"where jobfolders.datecreated between '" + sdate + "' and '" + edate + "' and jobfolders.deleted=0 and jobfolders.folderstatus='" + FOLDERCOMMITED + "' ";
	
	if(!cnm.equals(""))
	{
		cnm = replaceSingleQuotes(cnm);
		
		sqlstm += "and customer.customer_name like '%" + cnm + "%'";
	}

    sql = als_mysoftsql();
    if(sql == NULL) return;
	tlist = sql.rows(sqlstm);
	sql.close();

	reccount = tlist.size();
	Listbox newlb = makeVWListboxWithFooter(folders_searchdiv, folders_lb_headers, "folderjobs_lb", 5, reccount.toString() + " folders");

	if(tlist.size() == 0)
	{
		//sql.close();
		return;
	}

	newlb.setRows(30);
	newlb.addEventListener("onSelect", new folderjobslb_Listener());

	for(ilist : tlist)
	{
		ArrayList kabom = new ArrayList();

		iorigid = ilist.get("origid");
		folderbranch = ilist.get("branch");
		folderprefix = folderPrefixByBranch(folderbranch);
		folderstr = folderprefix + padZeros5(iorigid);

		db_folderno_str = ilist.get("folderno_str");
		if(db_folderno_str.equals("")) db_folderno_str = folderstr;

		kabom.add(db_folderno_str);
		kabom.add(ilist.get("datecreated").toString().substring(0,10));
		kabom.add(ilist.get("duedate").toString().substring(0,10));

		iar_code = ilist.get("ar_code");
		iar_code = iar_code.toUpperCase().trim();
		icompanyname = "Undefined";

		// 11/6/2010: hardcode ar_code CASH and CASH USD in mysoft. Load customer info from table CashSales_CustomerInfo
		if(iar_code.equals("CASH") || iar_code.equals("CASH USD"))
		{
			csrec = getCashSalesCustomerInfo_Rec(db_folderno_str); // get rec based on folder no
			if(csrec != null)
				icompanyname = "CshAct: " + csrec.get("customer_name");
			else
				icompanyname = "CshAct: Undefined";
		}
		else
		{
			kkbb = ilist.get("customer_name");
			icompanyname = (kkbb == null) ? "Undefined" : kkbb;
		}

		kabom.add(trimListitemLabel(icompanyname,35));
		kabom.add(ilist.get("labfolderstatus"));

		relby = ilist.get("releasedby");
		relby = (relby.equals("")) ? "-----" : relby;
		kabom.add(relby);

		reldate = ilist.get("releaseddate").toString().substring(0,10);
		reldate = (reldate.equals("1900-01-01")) ? "----------" : reldate;
		kabom.add(reldate);

		coadate = ilist.get("coadate").toString().substring(0,10);
		coadate = (coadate.equals("1900-01-01")) ? "----------" : coadate;
		kabom.add(coadate);

		kabom.add(folderbranch);
		strarray = convertArrayListToStringArray(kabom);
		insertListItems(newlb,strarray,"false");
	}

} // end of startFolderJobsSearch()

Object[] testparameters_lb_headers = {
	new listboxHeaderObj("origid",false),
	new listboxHeaderObj("mysoftcode",false),
	new listboxHeaderObj("Test",true),
	new listboxHeaderObj("Result",true),
};

void populateSample_Tests(int sampleid, Div mDiv, String lb_ident)
{
	Listbox newlb = makeVWListbox(mDiv, testparameters_lb_headers, lb_ident, 5);

	sql = als_mysoftsql();
	if(sql == null) return;
	sqlstm = "select JobTestParameters.origid, JobTestParameters.mysoftcode, StockMasterDetails.Description from JobTestParameters " +
	"left join StockMasterDetails on JobTestParameters.mysoftcode = StockMasterDetails.id " +
	"where jobsamples_id=" + sampleid.toString();
	
	samptests = sql.rows(sqlstm);
	sql.close();
	
	recc = samptests.size();
	
	if(recc == 0) return;
	
	for(smtest : samptests)
	{
		mysoftcode = smtest.get("mysoftcode").toString();
		// stockrec = getStockMasterDetails(mysoftcode);

		if(stockrec != null)
		{
			ArrayList kabom = new ArrayList();
			jtporigid = smtest.get("origid").toString();
			kabom.add(jtporigid);
			kabom.add(mysoftcode);
			kabom.add(smtest.get("Description"));
			kabom.add(checkEmptyString(getChemResult_Final(jtporigid)));
			strarray = convertArrayListToStringArray(kabom);
			insertListItems(newlb,strarray,"false");
		}
	}
}

// Load tests assigned to folder - make use of global_selected_folder
// tests_div
void viewFolderTests_clicker()
{
	if(global_selected_folder.equals("")) return;

	sql = als_mysoftsql();
	if(sql == null) return;

	foldernum = convertFolderNoToInteger(global_selected_folder);

	// get all samples from folder
	sqlstm = "select origid,sampleid_str,samplemarking from " + JOBSAMPLES_TABLE + " where deleted=0 and jobfolders_id=" + foldernum.toString();
	samplerecs = sql.rows(sqlstm);
	sql.close();

	// create a nice accordion-tabbox thing!!!
	if(tests_div.getFellowIfAny("tests_tabbox") != null)
		tests_tabbox.setParent(null); 	// remove any previous tabbox

	Tabbox tabby = new Tabbox();
	tabby.setId("tests_tabbox");
	tabby.setParent(tests_div);
	tabby.setMold("accordion");

	Tabs tabbytabs = new Tabs();
	tabbytabs.setParent(tabby);

	Tabpanels tabpanels = new Tabpanels();
	tabpanels.setParent(tabby);

	for(smrec : samplerecs)
	{
		smarking = smrec.get("sampleid_str");
		Tab tabs_tab = new Tab();
		tabs_tab.setLabel(smarking);
		tabs_tab.setStyle("font-size:9px");
		tabs_tab.setParent(tabbytabs);

		Tabpanel tabpanel = new Tabpanel();
		tabpanel.setParent(tabpanels);

		Div testdiv = new Div();
		testdiv.setParent(tabpanel);

		populateSample_Tests(smrec.get("origid"), testdiv, smarking);
	}

	//divisionBreakdown_clicker(); // shows breakdown - supposed to be a separate button-clicker. no need
}

Object[] folderbreakdown_lb_headers = {
	new listboxHeaderObj("mysoftcode",false),
	new listboxHeaderObj("Test",true),
	new listboxHeaderObj("Division",true),
	new listboxHeaderObj("Section",true),
	new listboxHeaderObj("#Smp",true),
	new listboxHeaderObj("#Pend",true),
};

// Database util func: count the number of samples in a folder with the assigned test
String countSamples_AssTest(String ifolderno, String imysoftcode)
{
	sql = als_mysoftsql();
	if(sql == null) return;

	sqlstm = "select count(JobTestParameters.origid) as NumSamp from jobsamples " +
		"left join jobfolders on jobsamples.jobfolders_id = jobfolders.origid " +
		"left join jobtestparameters on jobtestparameters.jobsamples_id = jobsamples.origid " +
		"where jobfolders.origid=" + ifolderno + " and jobtestparameters.mysoftcode=" + imysoftcode +
		" and jobsamples.deleted=0";

	kkb = sql.firstRow(sqlstm);
	sql.close();

	retval = "---";
	if(kkb != null) retval = kkb.get("NumSamp").toString();
}

// folderdetails_div , global_selected_folder
void divisionBreakdown_clicker()
{
	if(global_selected_folder.equals("")) return;

	foldernum = convertFolderNoToInteger(global_selected_folder).toString();

	sql = als_mysoftsql();
	if(sql == null) return;

	sqlstm = "select distinct jobtestparameters.mysoftcode, stockmasterdetails.description, stockmasterdetails.stock_cat, stockmasterdetails.groupcode " +
	"from jobsamples left join jobfolders " +
	"on jobsamples.jobfolders_id = jobfolders.origid " +
	"left join jobtestparameters " +
	"on jobtestparameters.jobsamples_id = jobsamples.origid " +
	"left join stockmasterdetails " +
	"on jobtestparameters.mysoftcode = stockmasterdetails.id " +
	"where jobfolders.origid=" + foldernum;

	foldbd = sql.rows(sqlstm);
	sql.close();

	if(foldbd.size() < 1) return;

	Listbox newlb = makeVWListbox(folderdetails_div, folderbreakdown_lb_headers, "breakdown_lb", 10);

	for(mpi : foldbd)
	{
		ArrayList kabom = new ArrayList();

		mysoftcode = mpi.get("mysoftcode").toString();
		if(mysoftcode != null)
		{
			kabom.add(mysoftcode);
			kabom.add(trimListitemLabel(mpi.get("description"),30));
			kabom.add(mpi.get("stock_cat"));
			kabom.add(mpi.get("groupcode"));

			//kabom.add(countSamples_AssTest(foldernum,mysoftcode));

			strarray = convertArrayListToStringArray(kabom);
			insertListItems(newlb,strarray,"false");
		}
	}
}

void doViewDoculinkPopup()
{
	// make sure we've some sampleid selected before showing the worksheet list
	if(!check_ListboxExist_SelectItem(folders_searchdiv,"folderjobs_lb")) return;
	foldern = folderjobs_lb.getSelectedItem().getLabel();
	documentLinkProp.global_eq_origid = foldern;
	documentLinkProp.refreshListbox.populateDocumentLinks(documentLinkProp.global_eq_origid, documentLinkProp.document_idprefix);

	// show CRUD buttons for admin
	if(useraccessobj.accesslevel == 9)
	{
		documentLinkProp.refreshListbox.showCrudButtons();
		documentLinkProp.refreshListbox.showAdminButtons();
	}

	doculink_popup.open(viewdoculinks_btn);
}

// 11/8/2010: to show cash-account details, stored in a diff table mah..
void showCashAccountDetails_clicker()
{
	if(folderjobs_lb.getSelectedIndex() == -1) return;
	foldern = folderjobs_lb.getSelectedItem().getLabel();

	csrec = getCashSalesCustomerInfo_Rec(foldern);
	if(csrec == null)
	{
		showMessageBox("Sorry.. cannot find cash-account customer details");
		return;
	}
	
	ca_customer_name_tb.setValue(csrec.get("customer_name"));
	ca_contact_person1_tb.setValue(csrec.get("contact_person1"));
	ca_address1_tb.setValue(csrec.get("address1"));
	ca_address2_tb.setValue(csrec.get("address2"));
	ca_city_tb.setValue(csrec.get("city"));
	ca_zipcode_tb.setValue(csrec.get("zipcode"));
	ca_state_tb.setValue(csrec.get("state"));
	ca_country_tb.setValue(csrec.get("country"));
	ca_telephone_tb.setValue(csrec.get("telephone"));
	ca_fax_tb.setValue(csrec.get("fax"));
	ca_email_tb.setValue(csrec.get("email"));

	cashaccount_details_Popup.open(showcashacct_btn);
}

// let supervisor release the folder - no more changes.. haha
void releaseTheFolder_clicker()
{
	if(global_selected_folder.equals("")) return;
	extfold = convertFolderNoToInteger(global_selected_folder).toString();

	if (Messagebox.show("About to release folder " + global_selected_folder + " - point of no return..", "Are you sure?", 
		Messagebox.YES | Messagebox.NO, Messagebox.QUESTION) ==  Messagebox.NO) return;

	todaydate = getDateFromDatebox(hiddendatebox);

	sql = als_mysoftsql();
	if(sql == null) return;
	sqlstm = "update jobfolders set releasedby='" + useraccessobj.username + "', releaseddate='" + todaydate + "', labfolderstatus='" + FOLDERRELEASED + "' where origid=" + extfold;
	sql.execute(sqlstm);
	sql.close();

	addAuditTrail(global_selected_folder,"ReleaseFolder: folder was released", useraccessobj.username, todaydate);
	startFolderJobsSearch(); // refresh
}

]]>
</zscript>

<!-- result worksheets management popup -->
<popup id="doculink_popup">
<groupbox width="400px">

	<include id="linkingdoc_include" src="alsglobal/doculink.zul"/>
	
	<separator height="5px" />
	<hbox>
		<button label="Close" onClick="doculink_popup.close()" style="font-size:9px" />
	</hbox>

</groupbox>
</popup>
<!-- end of result worksheets management popup -->

<!-- cash account customer details popup -->
<popup id="cashaccount_details_Popup">
<groupbox width="300px">
<caption id="cashacctdetail_lbl" label="Cash account - customer details" />
	<vbox>
		<hbox>
			<label value="Cust.Name" style="font-size:9px" />
			<separator width="10px" />
			<textbox id="ca_customer_name_tb" width="200px" style="font-size:9px" />
		</hbox>
		
		<hbox>
			<label value="Cont.Person" style="font-size:9px" />
			<separator width="4px" />
			<textbox id="ca_contact_person1_tb" width="200px" style="font-size:9px" />
		</hbox>
		
		<hbox>
			<label value="Address1" style="font-size:9px" />
			<separator width="17px" />
			<textbox id="ca_address1_tb" width="200px" style="font-size:9px" />
		</hbox>
		
		<hbox>
			<label value="Address2" style="font-size:9px" />
			<separator width="17px" />
			<textbox id="ca_address2_tb" width="200px" style="font-size:9px" />
		</hbox>
		
		<hbox>
			<label value="City" style="font-size:9px" />
			<separator width="45px" />
			<textbox id="ca_city_tb" width="70px" style="font-size:9px" />
			
			<label value="Zipcode" style="font-size:9px" />
			<textbox id="ca_zipcode_tb" width="70px" style="font-size:9px" />
		</hbox>

		<hbox>
			<label value="State" style="font-size:9px" />
			<separator width="39px" />
			<textbox id="ca_state_tb" width="70px" style="font-size:9px" />
			
			<label value="Country" style="font-size:9px" />
			<textbox id="ca_country_tb" width="70px" style="font-size:9px" />
		</hbox>
		
		<hbox>
			<label value="Telephone" style="font-size:9px" />
			<separator width="14px" />
			<textbox id="ca_telephone_tb" width="70px" style="font-size:9px" />
			
			<label value="Fax" style="font-size:9px" />
			<separator width="18px" />
			<textbox id="ca_fax_tb" width="70px" style="font-size:9px" />
		</hbox>
		<hbox>
			<label value="Email" style="font-size:9px" />
			<separator width="38px" />
			<textbox id="ca_email_tb" width="100px" style="font-size:9px" />
		</hbox>
		<separator height="3px" />
		<hbox>
			<!-- <button label="Save" style="font-size:9px" onClick="ca_save_Clicker()" /> -->
			<button label="Close" style="font-size:9px" onClick="cashaccount_details_Popup.close()" />
		</hbox>
	</vbox>
</groupbox>
</popup>
<!-- end of popup -->

<div width="1200px">
<panel id="release_folders_panel" title="Release Folder/Results" border="normal" collapsible="true" closable="true">
<panelchildren>
<datebox id="hiddendatebox" format="yyyy-MM-dd" visible="false" />
<vbox>
<groupbox mold="3d" width="100%">
<caption label="Search parameters" />
<vbox>

<hbox>
	<label value="Start date" />
	<datebox id="startdate" format="yyyy-MM-dd" />
	<separator width="3px"/>
	<label value="End date" />
	<datebox id="enddate" format="yyyy-MM-dd" />
	<button label="Search/Refresh" onClick="startFolderJobsSearch()" />
	<separator width="30px" />
	<!-- <button label="Folder details" onClick="localPlayDriller()" /> -->
	<button id="showcashacct_btn" label="CashAcct Details" onClick="showCashAccountDetails_clicker()" />
	<button id="viewdoculinks_btn" label="COC/PO/Documents" onClick="doViewDoculinkPopup()" />
</hbox>

<hbox>
	<label value="Customer" />
	<textbox id="customer_tb" width="200px" />
	<label value="(Max. 200 folders per search)" style="font-size:9px" />
</hbox>

</vbox>
</groupbox>

<hbox>
<!-- search results box -->
<groupbox mold="3d" width="750px">
	<caption label="Search results" />
	<div id="folders_searchdiv" />
</groupbox>

<vbox>
	<div style="background:#668877;padding:2px">
		<label id="foldercustomername" style="color:#ffffff" />
	</div>

		<groupbox mold="3d">
		<caption label="Tests breakdown" />
		<div id="folderdetails_div" />
	</groupbox>
	
	<div id="tests_div" />
	
	<hbox>
		<button id="resultsheet_btn" label="View result-sheet" visible="false" onClick="viewResultsWorksheet()" />
		<button id="releasefolder_btn" label="RELEASE FOLDER" visible="false" onClick="releaseTheFolder_clicker()" />
	</hbox>

</vbox>

</hbox>

<zscript>
<![CDATA[

// Set search startdate and enddate to today's date
setTodayDatebox(startdate);
setTodayDatebox(enddate);
setTodayDatebox(hiddendatebox);

documentLinkProp.document_idprefix = "DOCS";
setDocumentLink_DynamicProperty(linkingdoc_include, documentLinkProp, useraccessobj);

]]>
</zscript>

</vbox>
</panelchildren>
</panel>

</div>

</zk>

