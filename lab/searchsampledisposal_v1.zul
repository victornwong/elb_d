<?xml version="1.0" encoding="UTF-8"?>
<?page id="searchsampledisposal_mod"?>
<zk>
<zscript src="../alsglobal/alsglobaldefs.zs" />
<zscript src="../alsglobal/alsglobalfuncs.zs" />
<zscript src="../alsglobal/alsglobal_guifuncs.zs" />
<zscript src="../alsglobal/alsglobal_sqlfuncs.zs" />
<zscript src="../alsglobal/securityfuncs.zs" />
<zscript>
<![CDATA[
/*
Version		: 1.0
Title		: Search sample disposal things
Written by	: Victor Wong

Revisions:

30/01/2012: started

*/
/*
import java.util.*;
import java.text.*;
import java.lang.Float;
import groovy.sql.Sql;
import org.zkoss.zk.ui.*;
import org.zkoss.zk.zutl.*;
*/
import org.victor.*;
sechand = new SecurityFuncs();

myincludeid = Executions.getCurrent().getParameter("myid");
useraccessobj = sechand.getUserAccessObject();
if(useraccessobj == null) Executions.sendRedirect(MAINLOGIN_PAGE);

sqlhand = new SqlFuncs();
kiboo = new Generals();
lbhand = new ListboxHandler();
guihand = new GuiFuncs();
gridhand = new GridHandler();

public class folderListObject
{
	public String origid;
	public String folderno_str;
	public String ar_code;
	public String customer_name;
	public int overdue; // 1=wip and not overdue, 2=overdue and in wip, 3=released
}

FOLDERPICK_COLOR = "background:#AAAAAA";
OVERDUE_ROWCOLOR = "background:#F74623";
RELEASED_ROWCOLOR = "background:#AEF520";

last_foldersearch_type = 0;
global_selected_arcode = "";
global_selected_folderno = "";
selected_folderno = ""; // used by repeatstuff.zs
global_selected_origid = "";
global_selected_customername = "";

ArrayList mainFolderList;
Object prevSelectedFolder = null;
String prevSelectedFolder_style = "";

foldermeta_area_toggler = false;
foldermeta_loaded = false;

class foldersOnSelect implements org.zkoss.zk.ui.event.EventListener
{
	public void onEvent(Event event) throws UiException
	{
		selrow = event.getTarget();

		if(prevSelectedFolder != null)
		{
			if(prevSelectedFolder != selrow)
			{
				if(prevSelectedFolder_style.equals(""))
					prevSelectedFolder.setStyle(null);
				else
					prevSelectedFolder.setStyle(prevSelectedFolder_style);
			}
			else
				return; // selected same as previous, return - don't waste cpu
		}

		prevSelectedFolder_style = (selrow.getStyle() == null) ? "" : selrow.getStyle();
		prevSelectedFolder = selrow;
		selrow.setStyle(FOLDERPICK_COLOR);

		selid = selrow.getId();
		selid = selid.substring(2,selid.length());
		
		for(dpi : mainFolderList)
		{
			if(dpi.origid.equals(selid))
			{
				global_selected_origid = dpi.origid;
				global_selected_arcode = dpi.ar_code;
				global_selected_folderno = dpi.folderno_str;
				selected_folderno = dpi.folderno_str;
				global_selected_customername = dpi.customer_name;

				//showTestAssigned(global_selected_origid);

				//foldermeta_area_toggler = false;
				//foldermeta_loaded = false;
				//foldermeta_area.setVisible(false);
				
				//showJobNotes(global_selected_origid);

				// folder->tests caption
				//foldercaption_lbl.setValue(global_selected_folderno);
				//companyname_lbl.setValue(global_selected_customername);

				break;
			}
		}
	}
}

String[] folderListHeaders = {"Folder","Dated","W.Trays","S.Trays","Customer" };

// recoded from startFolderJobsSearch() in v2 - cleaner and uses grid instead of listbox
// itype: 1=by date and searchtext, 2=by folder no, 3=by sample id, 4=by share-sample,5=by pkd,6=by salesman, 7=by credit-term
// 8=by storage tray
void loadFoldersList(int itype)
{
	last_foldersearch_type = itype;

	sdate = kiboo.getDateFromDatebox(startdate);
    edate = kiboo.getDateFromDatebox(enddate);
	searchtext = kiboo.replaceSingleQuotes(customer_tb.getValue());
	byfold = kiboo.replaceSingleQuotes(byfolder_tb.getValue());
	bysamp = kiboo.replaceSingleQuotes(bysampleid_tb.getValue());
	bytray = kiboo.replaceSingleQuotes(tray_tb.getValue());
	/*
	sharesmp = share_sample.getSelectedItem().getLabel();
	creditm = customer_terms_lb.getSelectedItem().getLabel();
	*/

	sqlstm_head = "select top 300 jf.origid, jf.ar_code, jf.datecreated, jf.folderstatus, jf.branch," + 
	"jf.duedate, jf.tat, jf.folderno_str, jf.labfolderstatus, jf.pkd_samples, jf.share_sample, jf.coadate, " +
	"jf.soil_storagetrays, jf.storagetrays, " +
	"customer.customer_name, csci.customer_name as cashcustomer " +
	"from jobfolders jf " +
	"left join customer on customer.ar_code = jf.ar_code " +
	"left join jobsamples js on js.jobfolders_id = jf.origid " +
	"left join cashsales_customerinfo csci on csci.folderno_str = jf.folderno_str " +
	"where jf.deleted=0 and jf.folderstatus in ('" + FOLDERCOMMITED + "','" + FOLDERLOGGED + "') ";
	
	sqlstm_foot = "group by jf.origid, jf.ar_code, jf.datecreated, jf.folderstatus, jf.branch," + 
	"jf.duedate, jf.tat, jf.folderno_str, jf.labfolderstatus, jf.pkd_samples, jf.share_sample, jf.coadate, " +
	"jf.soil_storagetrays, jf.storagetrays, " +
	"customer.customer_name, csci.customer_name " +
	"order by jf.datecreated desc";

	bystext = "";
	bydate = "and jf.datecreated between '" + sdate + "' and '" + edate + "' ";
	switch(itype)
	{
		case 2:
			bydate = " ";
			bystext = "and jf.folderno_str like '%" + byfold + "%' ";
			break;

		case 3:
			bydate = " ";		
			bystext = "and js.sampleid_str like '_________%" + bysamp + "%' ";
			break;

		case 4:
			bystext = "and jf.share_sample='" + sharesmp + "' ";
			break;

		case 5:
			bystext = "and pkd_samples=1 ";
			break;

		case 6:
			selitem = qt_salesperson.getSelectedItem();
			salesp = getListcellItemLabel(selitem,1);
			if(salesp.equals("None")) return;
			bystext = "and customer.salesman_code='" + salesp + "' ";
			break;

		case 7: // by credit-term
			bystext = "and customer.credit_period='" + creditm + "' ";
			break;

		case 8:
			wooi = (bytray.equals("")) ? "%" : "%" + bytray + "%";
			bystext = "and (soil_storagetrays like '" + wooi + "' or storagetrays like '" + wooi + "') ";
			break;

		default:
			if(!searchtext.equals("")) bystext = "and (customer.customer_name like '%" + searchtext + "%' " + 
			"or csci.customer_name like '%" + searchtext + "%') ";
			break;
	}

	sqlstm = sqlstm_head + bydate + bystext + sqlstm_foot;

    sql = sqlhand.als_mysoftsql();
	if(sql == null) return;
    therecs = sql.rows(sqlstm);

	if(therecs.size() == 0) { sql.close(); return; }
	
	// remove previous grid
	if(folders_searchdiv.getFellowIfAny("folders_lb") != null) folders_lb.setParent(null);

	mainFolderList = new ArrayList();

	thegrid = new Grid();
	thegrid.setId("folders_lb");

	gridrows = gridhand.gridMakeRows("","",thegrid);
	gridhand.makeGridHeaderColumns(folderListHeaders, thegrid);

	todate = hiddendatebox.getValue();
	overduecount=0;
	releasedcount=0;

	for(dpi : therecs)
	{
		// Store folder metadata
		ifolder = new folderListObject();
		ifolder.origid = dpi.get("origid").toString();
		ifolder.folderno_str = dpi.get("folderno_str");
		ifolder.ar_code = dpi.get("ar_code");

		if(dpi.get("ar_code").equals("CASH"))
			ifolder.customer_name = dpi.get("cashcustomer");
		else
			ifolder.customer_name = dpi.get("customer_name");

		// process overdue bar-color
		duedate = dpi.get("duedate");

		ifolder.overdue = 1;
		if(todate.compareTo(duedate) >= 0 && dpi.get("labfolderstatus").equals("WIP"))
			ifolder.overdue = 2;
		else
			ifolder.overdue = 3;

		overduestyle = "";
		labelstyle = "";

		switch(ifolder.overdue)
		{
			case 2:
				overduestyle = OVERDUE_ROWCOLOR;
				labelstyle = "color:#ffffff;font-size:9px;font-weight:bold";
				overduecount++;
				break;
			case 3:
				if(dpi.get("labfolderstatus").equals("RELEASED"))
				{
					overduestyle= RELEASED_ROWCOLOR;
					labelstyle = "color:#222222;font-size:9px";
					releasedcount++;
				}
				break;
		}

		mainFolderList.add(ifolder);

		theid = "FR" + ifolder.origid;
		folder_row = gridhand.gridMakeRow(theid,overduestyle,"",gridrows);
		//folder_row.setStyle("background:#AA0000");
		folder_row.addEventListener("onClick", new foldersOnSelect());
		
		gridhand.makeLabelToParent(dpi.get("folderno_str"),labelstyle,folder_row);
		gridhand.makeLabelToParent(dpi.get("datecreated").toString().substring(0,10),labelstyle,folder_row);

		gridhand.makeLabelToParent(kiboo.checkNullString_RetWat(dpi.get("storagetrays"),""),labelstyle,folder_row);
		gridhand.makeLabelToParent(kiboo.checkNullString_RetWat(dpi.get("soil_storagetrays"),""),labelstyle,folder_row);

		//gridhand.makeLabelToParent(dpi.get("duedate").toString().substring(0,10),labelstyle,folder_row);

		icompanyname = "Undefined";
		iar_code = dpi.get("ar_code");

		if(iar_code != null)
		{
			iar_code = iar_code.toUpperCase().trim();

			if(iar_code.equals("CASH") || iar_code.equals("CASH USD") || iar_code.equals("300S-550"))
			{
				icompanyname = "CshAcct: ";
				if(iar_code.equals("300S-550")) // syabas contractor
					icompanyname = "Syabas: ";

				if(dpi.get("cashcustomer") != null)
					icompanyname += dpi.get("cashcustomer");
				else
					icompanyname += "UNKNOWN";
			}
			else
				icompanyname = kiboo.checkNullString_RetWat(dpi.get("customer_name"),"Undefined");
		}

		gridhand.makeLabelToParent(icompanyname,labelstyle,folder_row);

		// Count num of samples in folder
		/*
		sqlstm3 = "select count(js.origid) as samplecount from jobsamples js " +
		"left join jobfolders jf on js.jobfolders_id = jf.origid " +
		"where js.deleted=0 and jf.origid=" + ifolder.origid;
		
		scs = sql.firstRow(sqlstm3);
		scount = 0;
		if(scs != null) scount = scs.get("samplecount");
		gridhand.makeLabelToParent(scount.toString(),labelstyle,folder_row);		

		gridhand.makeLabelToParent(dpi.get("folderstatus"),labelstyle,folder_row);
		gridhand.makeLabelToParent(checkNullString(dpi.get("labfolderstatus")),labelstyle,folder_row);

		gridhand.makeLabelToParent(dpi.get("branch"),labelstyle,folder_row);

		pkdwop = "---";
		if(dpi.get("pkd_samples") != null) pkdwop = (dpi.get("pkd_samples") == 0) ? "---" : "-Y-";
		gridhand.makeLabelToParent(pkdwop,labelstyle,folder_row);
		gridhand.makeLabelToParent(kiboo.checkNullString_RetWat(dpi.get("share_sample"),"---"),labelstyle,folder_row);
		*/
	
	}

	sql.close();

/*
	numofsamples_lbl.setValue(therecs.size().toString());
	overdue_count_lbl.setValue(overduecount.toString());
	released_count_lbl.setValue(releasedcount.toString());
	wip_lbl.setValue((therecs.size()-releasedcount).toString()); 
*/

	thegrid.setParent(folders_searchdiv);
	folders_searchdiv.setVisible(true);

/*
	folderworkbutts.setVisible(true);
	folderworkarea.setVisible(true);
*/
}



]]>
</zscript>

<div width="1200px">
<panel id="srchsampdisp_panel" title="Search samples disposal v.1" border="normal" collapsible="true" closable="true" >
<panelchildren>
<datebox id="hiddendatebox" format="yyyy-MM-dd" visible="false" />

<groupbox mold="3d" width="100%">
<!-- search boxes -->
<hbox>
	<grid width="300px">
		<rows>
			<row>
				<label value="Start date" style="font-size:9px" />
				<datebox id="startdate" format="yyyy-MM-dd" style="font-size:9px" />
				<label value="End date" style="font-size:9px" />
				<datebox id="enddate" format="yyyy-MM-dd" style="font-size:9px" />
			</row>
			<row spans=",2,">
				<label value="Customer" style="font-size:9px" />
				<textbox id="customer_tb" width="99%" style="font-size:9px" />
				<button label="Load" style="font-size:9px" onClick="loadFoldersList(1)" />
			</row>
		</rows>
	</grid>
	<grid width="250px">
		<rows>
			<row>
				<label value="By folder" style="font-size:9px" />
				<textbox id="byfolder_tb" style="font-size:9px" />
				<button label="Dig" style="font-size:9px" onClick="loadFoldersList(2)" />
			</row>
			<row>
				<label value="By sample.ID" style="font-size:9px" />
				<textbox id="bysampleid_tb" style="font-size:9px" />
				<button label="Dig" style="font-size:9px" onClick="loadFoldersList(3)" />
			</row>
		</rows>
	</grid>
	<grid>
		<rows>
			<row>
				<label value="Tray" style="font-size:9px" />
				<textbox id="tray_tb" style="font-size:9px" />
				<button label="by tray" style="font-size:9px" onClick="loadFoldersList(8)" />
			</row>
		</rows>
	</grid>
</hbox>
</groupbox>
<!-- ENDOF search boxes -->
<separator height="2px" />

<div id="folders_searchdiv" width="700px" height="550px" style="border:1px solid gray;overflow:auto;padding:2px;" visible="false" />

<zscript>
<![CDATA[

kiboo.setTodayDatebox(hiddendatebox);
kiboo.setTodayDatebox(startdate);
kiboo.setTodayDatebox(enddate);

]]>
</zscript>
</panelchildren>
</panel>
</div>
</zk>

