<?xml version="1.0" encoding="UTF-8"?>
<?page id="relcoaloader_mod"?>
<zk>
<zscript src="../alsglobal/alsglobaldefs.zs" />
<zscript src="../alsglobal/alsglobalfuncs.zs" />
<zscript src="../alsglobal/alsglobal_guifuncs.zs" />
<zscript src="../alsglobal/alsglobal_sqlfuncs.zs" />
<zscript src="../alsglobal/securityfuncs.zs" />
<zscript>
<![CDATA[
MYVERSION = "v1.0";
/*
Title		: Print/Export released COA
Written by	: Victor Wong

Revisions:

09/01/2012: started
28/03/2012: ported to byte-compiled funcs

*/
/*
import java.util.*;
import java.text.*;
import java.lang.Float;
import groovy.sql.Sql;
import org.zkoss.zk.ui.*;
import org.zkoss.zk.zutl.*;
*/
import org.victor.*;
sechand = new SecurityFuncs();

myincludeid = Executions.getCurrent().getParameter("myid");
useraccessobj = sechand.getUserAccessObject();
if(useraccessobj == null) Executions.sendRedirect(MAINLOGIN_PAGE);

kiboo = new Generals();
sqlhand = new SqlFuncs();
lbhand = new ListboxHandler();
guihand = new GuiFuncs();
samphand = new SampleReg();
luhand = new LookupFuncs();

last_foldersearch_type = 0;
selected_folderorigid = "";
selected_folderno = "";
global_labfolderstatus = "";

selected_signator1 = "";
selected_signator2 = "";
selected_signdate1 = "";
selected_signdate2 = "";

Object[] folders_lb_headers = {
	new listboxHeaderWidthObj("origid",false,""),
	new listboxHeaderWidthObj("arcode",false,""),
	new listboxHeaderWidthObj("Folder",true,"80px"),
	new listboxHeaderWidthObj("RecvDate",true,"80px"),
	new listboxHeaderWidthObj("DueDate",true,"80px"),
	new listboxHeaderWidthObj("Customer",true,"350px"),
	new listboxHeaderWidthObj("Lab.Rel",true,"60px"),
	new listboxHeaderWidthObj("Rel.Date",true,"80px"),
	new listboxHeaderWidthObj("Sign1",true,"60px"),
	new listboxHeaderWidthObj("Sign1_Date",true,"80px"),
	new listboxHeaderWidthObj("Sign2",true,"60px"),
	new listboxHeaderWidthObj("Sign2_Date",true,"80px"),
	new listboxHeaderWidthObj("PrintBy",true,"80px"),
	new listboxHeaderWidthObj("PrintDate",true,"80px"),
	};

class folderjobslb_Listener implements org.zkoss.zk.ui.event.EventListener
{
	public void onEvent(Event event) throws UiException
	{
		selitem = event.getReference();
		selected_folderorigid = lbhand.getListcellItemLabel(selitem,0);
		selected_folderno = lbhand.getListcellItemLabel(selitem,2);

		global_labfolderstatus = lbhand.getListcellItemLabel(selitem,6);

		selected_signator1 = lbhand.getListcellItemLabel(selitem,8);
		selected_signdate1 = lbhand.getListcellItemLabel(selitem,9);

		selected_signator2 = lbhand.getListcellItemLabel(selitem,10);
		selected_signdate2 = lbhand.getListcellItemLabel(selitem,11);

		//showFolderResults(selected_folderorigid);
		//showFolderMetadata(selected_folderno);
	}
}

// itype: 1=by date, 2=by customer-name and selected date, 3=by folder, 4=by sampleid
void listFolders(int itype)
{
	// reset vars
	selected_folderorigid = "";
	selected_folderno = "";
	global_labfolderstatus = "";

	selected_signator1 = "";
	selected_signator2 = "";
	selected_signdate1 = "";
	selected_signdate2 = "";

	sdate = kiboo.getDateFromDatebox(startdate);
	edate = kiboo.getDateFromDatebox(enddate);
	searchtext = kiboo.replaceSingleQuotes(customer_tb.getValue());
	foldnum = kiboo.replaceSingleQuotes(folderno_tb.getValue());
	sampid = kiboo.replaceSingleQuotes(sampleid_tb.getValue());
	last_foldersearch_type = itype;

	if(itype==3 && foldnum.equals("")) return;
	if(itype==4 && sampid.equals("")) return;

	// header query
	sqlstm = 
	"select top 200 jf.origid, jf.datecreated, jf.folderno_str, jf.duedate, jf.ar_code, jf.labfolderstatus, jf.releaseddate, " +
	"jf.sign1, jf.sign1_date, jf.sign2, jf.sign2_date, jf.coaprintby, jf.coaprintdate, " +
	"customer.customer_name, csci.customer_name as cashcustomer " +
	"from jobfolders jf left join customer on customer.ar_code = jf.ar_code " +
	"left join cashsales_customerinfo csci on csci.folderno_str = jf.folderno_str " +
	"left join jobsamples js on js.jobfolders_id = jf.origid ";

	switch(itype)
	{
		case 1:
			sqlstm += "where jf.datecreated between '" + sdate + "' and '" + edate + "'";
			break;
		case 2:
			sqlstm += "where jf.datecreated between '" + sdate + "' and '" + edate + 
			"' and customer.customer_name like '%" + searchtext + "%'";
			break;
		case 3:
			sqlstm += "where jf.folderno_str like '%" + foldnum + "%'";
			break;
		case 4:
			sqlstm += "where js.origid=" + sampid;
			break;
	}

	// footer query	
	sqlstm += " and js.deleted=0 and jf.deleted=0 and jf.folderstatus='COMMITED' " + 
	"group by jf.origid, jf.datecreated, jf.folderno_str, jf.duedate, jf.branch,jf.ar_code, jf.share_sample, " + 
	"jf.labfolderstatus, jf.releaseddate, " +
	"jf.sign1, jf.sign1_date, jf.sign2, jf.sign2_date, jf.coaprintby, jf.coaprintdate, " +
	"customer.customer_name, csci.customer_name order by jf.origid";

	Listbox newlb = lbhand.makeVWListbox_Width(folders_holder, folders_lb_headers, "folderjobs_lb", 10);

	sql = sqlhand.als_mysoftsql();
	if(sql == null) return;
    therows = sql.rows(sqlstm);
	sql.close();

	if(therows.size() == 0) return;
	if(therows.size() > 10) newlb.setRows(25);

	newlb.addEventListener("onSelect", new folderjobslb_Listener());

	for(dpi : therows)
	{
		ArrayList kabom = new ArrayList();
		kabom.add(dpi.get("origid").toString());
		kabom.add(dpi.get("ar_code"));

		kabom.add(dpi.get("folderno_str"));
		kabom.add(dpi.get("datecreated").toString().substring(0,10));
		kabom.add(dpi.get("duedate").toString().substring(0,10));

		iar_code = dpi.get("ar_code");
		iar_code = iar_code.toUpperCase().trim();
		icompanyname = dpi.get("customer_name");

		if(iar_code.equals("CASH") || iar_code.equals("CASH USD") || iar_code.equals("300S-550"))
		{
			csnam = dpi.get("cashcustomer");
			if(csnam != null) icompanyname = csnam;
		}

		if(icompanyname == null) icompanyname = "Undefined";

		kabom.add(icompanyname);
		kabom.add(dpi.get("labfolderstatus"));

		reldt = kiboo.checkNullDate(dpi.get("releaseddate"),"");
		if(reldt.equals("1900-01-01")) reldt = "";
		kabom.add(reldt);

		// signator 1
		kabom.add(kiboo.checkNullString(dpi.get("sign1")));
		sda1 = kiboo.checkNullDate(dpi.get("sign1_date"),"");
		kabom.add(sda1);

		// signator 2
		kabom.add(kiboo.checkNullString(dpi.get("sign2")));
		sda2 = kiboo.checkNullDate(dpi.get("sign2_date"),"");
		kabom.add(sda2);

		kabom.add(kiboo.checkNullString(dpi.get("coaprintby")));
		cpdt = kiboo.checkNullDate(dpi.get("coaprintdate"),"");
		if(cpdt.equals("1900-01-01")) cpdt = "";
		kabom.add(cpdt);

		strarray = kiboo.convertArrayListToStringArray(kabom);
		lbhand.insertListItems(newlb,strarray,JOBFOLDERS_PREFIX,"");
	}
	//newlb.invalidate();
}

// Generate COA in BIRT
// irepn : 1=coa portrait with disclaimers , 2=coa portrait without disclaimers, 3=for existing report-paper(chop logo/footer-bar)
// 4=for existing report-paper and continuous samples-list+results
void genCOA(int irepn)
{
	if(selected_folderorigid.equals("")) return;

	// check if results-released and signators actually signed (by date-stamp)
	if(!global_labfolderstatus.equals("RELEASED"))
	{
		guihand.showMessageBox("Folder not even RELEASED or SIGNED, how to generate COA??");
		return;
	}

	//alert(selected_signator1 + "::" + selected_signdate1 + " " + selected_signator2 + "::" + selected_signdate2);

	sd1 = false;
	sd2 = false;

	if(!selected_signator1.equals(""))
	{
		if(!selected_signdate1.equals("")) sd1 = true;
	}

	if(!selected_signator2.equals(""))
	{
		if(!selected_signdate2.equals("")) sd2 = true;
	}
	else
		sd2 = true;

	if(sd1 && sd2)
	{
		// put date-stamp and user who exported the COA
		todate = kiboo.getDateFromDatebox(hiddendatebox);

		sql = sqlhand.als_mysoftsql();
		if(sql == null) return;

		sqlstm = "update jobfolders set coaprintdate='" + todate + 
		"', coaprintby='" + useraccessobj.username + "' where origid=" + selected_folderorigid;

		sql.execute(sqlstm);
		sql.close();

		runmestr = "reporting/viewcoapot.zul";
		uniqwindowid = makeRandomId("cpt");

		// debugging and training purpose
		//selected_signator1 = "tan";
		//selected_signator2 = "ymkoh";

		theparam = "folder_no=" + selected_folderorigid + "&signator=" + selected_signator1 + 
		"&signator2=" + selected_signator2 + "&disc=" + irepn.toString();

		guihand.globalActivateWindow(mainPlayground,"miscwindows",runmestr, uniqwindowid, theparam, useraccessobj);
		listFolders(last_foldersearch_type); // refresh
	}
	else
	{
		guihand.showMessageBox("Sorry, not fully signed.. cannot generate COA");
	}
}

]]>
</zscript>

<div width="1200px">
<panel id="relcoaloader_panel" title="Print/Export released COA ${MYVERSION}" border="normal" collapsible="true" closable="true" >
<panelchildren>
<datebox id="hiddendatebox" format="yyyy-MM-dd" visible="false" />
<hbox>
	<grid>
		<rows>
			<row>
				<label value="Start date" style="font-size:9px" />
				<datebox id="startdate" format="yyyy-MM-dd" style="font-size:9px" />
				<label value="End date" style="font-size:9px" />
				<datebox id="enddate" format="yyyy-MM-dd" style="font-size:9px" />
				<button label="Load" style="font-size:9px" onClick="listFolders(1)" />
			</row>
			<row spans=",3,">
				<label value="Customer" style="font-size:9px" />
				<textbox id="customer_tb" width="99%" style="font-size:9px" />
				<button label="Search" style="font-size:9px" onClick="listFolders(2)" />
			</row>
		</rows>
	</grid>

	<grid>
		<rows>
			<row>
				<label value="Folder number" style="font-size:9px" />
				<textbox id="folderno_tb" style="font-size:9px" />
				<button label="by folder" style="font-size:9px" onClick="listFolders(3)" />
			</row>
			<row>
				<label value="Sample-ID" style="font-size:9px" />
				<textbox id="sampleid_tb" style="font-size:9px" />
				<button label="by sample-id" style="font-size:9px" onClick="listFolders(4)" />
			</row>
		</rows>
	</grid>

<label value="(Max. 200 folders per search)" style="font-size:8px" />	
	
</hbox>

<separator height="3px" />

<div style="background:#ffa500;padding:2px" >
<hbox>
	<vbox>
		<button label="Generate COA portrait (FOR EXISTING REPORT-PAPER v.7 - continuous pages)" style="font-size:9px" onClick="genCOA(4)" />
		<button label="Generate COA portrait (FOR EXISTING REPORT-PAPER v.7 - separate pages)" style="font-size:9px" onClick="genCOA(3)" />
	</vbox>
	<vbox>
		<button label="Generate COA portrait (WITH DISCLAIMERS v.7)" style="font-size:9px" onClick="genCOA(1)" />
		<button label="Generate COA portrait (NO DISCLAIMERS v.7)" style="font-size:9px" onClick="genCOA(2)" />
	</vbox>
</hbox>
</div>

<separator height="3px" />
<div id="folders_holder" width="1190px" />

<zscript>
<![CDATA[

kiboo.setTodayDatebox(hiddendatebox);
kiboo.setTodayDatebox(startdate);
kiboo.setTodayDatebox(enddate);

]]>
</zscript>
</panelchildren>
</panel>
</div>
</zk>

