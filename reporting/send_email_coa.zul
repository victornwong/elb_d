<?xml version="1.0" encoding="UTF-8"?>
<?page id="send_email_coa"?>
<zk>
<zscript src="../alsglobal/alsglobaldefs.zs" />
<zscript src="../alsglobal/alsglobalfuncs.zs" />
<zscript src="../alsglobal/alsglobal_guifuncs.zs" />
<zscript src="../alsglobal/alsglobal_sqlfuncs.zs" />
<zscript src="../alsglobal/securityfuncs.zs" />
<zscript src="../alsglobal/samplereg_funcs.zs" />
<zscript src="../alsglobal/emailfuncs.zs" />
<zscript>
<![CDATA[
/*
Version				: For user to send scanned/signed COA to client via email
Coding began date	: 28/9/2010
Developer			: Victor Wong
*/

import java.util.*;
import java.text.*;
import java.io.*;
import javax.mail.*;
import javax.mail.internet.*;
import javax.activation.*;
import groovy.sql.Sql;
import org.zkoss.zk.ui.*;

myincludeid = Executions.getCurrent().getParameter("myid");

useraccessobj = getUserAccessObject();
if(useraccessobj == null) Executions.sendRedirect(MAINLOGIN_PAGE);

/*
// check usergroup access - no access, just close the panel.. min. level 1 can browser through the folder/job list
boolean can_access = check_UsergroupAccess(useraccessobj.origid,SAMPREG_USERGROUP,1);

if(!can_access)
{
	showAccessDenied_Box(useraccessobj);
	globalClosePanel(myincludeid);
}
*/

selected_arcode = "";
selected_folderno = "";
selected_customer = "";
selected_folder_origid = "";

void localPlayFolderDetails()
{
	if(!check_ListboxExist_SelectItem(folders_searchdiv,"folderjobs_lb")) return;
	ifolderno = folderjobs_lb.getSelectedItem().getLabel();
	theparam = "folderno=" + ifolderno;
	uniqwindowid = makeRandomId("tfld");
	globalActivateWindow("miscwindows","samplereg/folderjobs_driller.zul", uniqwindowid, theparam, useraccessobj);
}

// List out email addresses def in customer_emails
void showEmailsbyCustomer()
{
	Object[] custemails_lb_headers = {
	new dblb_HeaderObj("origid",false,"origid",2),
	new dblb_HeaderObj("Name",true,"contact_name",1),
	new dblb_HeaderObj("E-Mail",true,"contact_email",1),
	};

	sql = als_mysoftsql();
    if(sql == NULL) return;
	sqlstm = "select origid,contact_name,contact_email from customer_emails where ar_code='" + selected_arcode + "' order by contact_name";
	Listbox newlb = makeVWListbox_onDB(emails_holder,custemails_lb_headers,"custemails_lb",5,sql,sqlstm);
	newlb.setMultiple(true);
	sql.close();

}

void showSentToWho(String idocid)
{
	Object[] sentto_lb_headers = {
	new dblb_HeaderObj("Sent",true,"datesent",3),
	new dblb_HeaderObj("To",true,"contact_name",1),
	new dblb_HeaderObj("By",true,"username",1),
	};

	sql = als_mysoftsql();
    if(sql == NULL) return;
	sqlstm = "select datesent,contact_name,username from stuff_emailed where docu_link=" + idocid + " order by datesent desc";
	Listbox newlb = makeVWListbox_onDB(docusent_holder,sentto_lb_headers,"senttowho_lb",6,sql,sqlstm);
	sql.close();
}

// onSelect event for startFolderJobsSearch()
class doculinks_lb_Listener implements org.zkoss.zk.ui.event.EventListener
{
	public void onEvent(Event event) throws UiException
	{
		selitem = event.getReference();
		docid = getListcellItemLabel(selitem,0);
		showSentToWho(docid);
	}
}

void showDocumentsList()
{
	Object[] documentLinks_lb_headers = {
	new dblb_HeaderObj("origid",false,"origid",2),
	new dblb_HeaderObj("Title",true,"file_title",1),
	new dblb_HeaderObj("D.Created",true,"datecreated",3),
	new dblb_HeaderObj("Owner",true,"username",1),
	};
	
	removeComponentInDiv(docusent_holder,"senttowho_lb");

	duclink = "DOCS" + selected_folderno;

	ds_sql = als_DocumentStorage();
	if(ds_sql == null) return;
	sqlstm = "select origid,file_title,datecreated,username from DocumentTable " +
	"where docu_link='" + duclink + "' and file_title='COA' and deleted=0";

	if(useraccessobj.accesslevel == 9) // admin can send everything..
	{
		sqlstm = "select origid,file_title,datecreated,username from DocumentTable " +
		"where docu_link='" + duclink + "' and deleted=0";
	}

	Listbox newlb = makeVWListbox_onDB(doculist_holder,documentLinks_lb_headers,"doculinks_lb",6,ds_sql,sqlstm);
	newlb.setMultiple(true);
	newlb.addEventListener("onSelect", new doculinks_lb_Listener());
	ds_sql.close();
}

// onSelect event for startFolderJobsSearch()
class folderjobslb_Listener implements org.zkoss.zk.ui.event.EventListener
{
	public void onEvent(Event event) throws UiException
	{
		selitem = event.getReference();
		selected_folderno = getListcellItemLabel(selitem,0);
		selected_customer = getListcellItemLabel(selitem,4);
		selected_arcode = getListcellItemLabel(selitem,5);
		selected_folder_origid = getListcellItemLabel(selitem,6);

		showEmailsbyCustomer();
		showDocumentsList();
		
		workspace_gb.setVisible(true);
	}
}

// Do the search and populate listbox
void startFolderJobsSearch(Datebox startd, Datebox endd, Textbox icustomer_tb)
{
	Object[] folders_lb_headers = {
	new listboxHeaderObj("FolderNo",true),
	new listboxHeaderObj("RecvDate",true),
	new listboxHeaderObj("DueDate",true),
	new listboxHeaderObj("Customer",true),
	new listboxHeaderObj("Sent",true),
	new listboxHeaderObj("arcode",false),
	new listboxHeaderObj("origid",false),
	};

	sdate = getDateFromDatebox(startd);
    edate = getDateFromDatebox(endd);
	cnm = icustomer_tb.getValue();

	if(sdate == null || edate == null)
    {
        showMessageBox("Please specify start and end date for search");
        return;
    }

    sql = als_mysoftsql();
    if(sql == NULL) return;
	
	// clear some prev fluff
	workspace_gb.setVisible(false);
	removeComponentInDiv(docusent_holder,"senttowho_lb");
	removeComponentInDiv(doculist_holder,"doculinks_lb");
	removeComponentInDiv(emails_holder,"custemails_lb");

	sqlstatem = "select jobfolders.origid as folder_origid, jobfolders.ar_code, jobfolders.datecreated, jobfolders.folderno_str, " + 
			"jobfolders.duedate, jobfolders.branch, jobfolders.labfolderstatus, " + 
			"customer.customer_name " +
			"from jobfolders left join customer " +
			"on customer.ar_code = jobfolders.ar_code " +
			"where jobfolders.datecreated between '" + sdate + "' and '" + edate + "' " + 
			"and jobfolders.deleted=0 and jobfolders.labfolderstatus='RELEASED' " + 
			"order by jobfolders.datecreated desc";

	// 25/3/2010: new select cmd to search based on s.date, e.date and customer-name - req by Zainab
	if(!cnm.equals(""))
	{
		xcnm = replaceSingleQuotes(cnm); // play safe
		sqlstatem = "select jobfolders.origid as folder_origid, jobfolders.ar_code, jobfolders.datecreated, jobfolders.folderno_str, " + 
			"jobfolders.duedate, jobfolders.branch, jobfolders.labfolderstatus, " + 
			"customer.customer_name " +
			"from jobfolders left join customer " +
			"on customer.ar_code = jobfolders.ar_code " +
			"where jobfolders.datecreated between '" + sdate + "' and '" + edate + "'" + 
			"and customer.customer_name like '%" + xcnm + "%' " +
			"and jobfolders.deleted=0 and jobfolders.labfolderstatus='RELEASED'";
	}

	tlist = sql.rows(sqlstatem);

	reccount = tlist.size();
	Listbox newlb = makeVWListboxWithFooter(folders_searchdiv, folders_lb_headers, "folderjobs_lb", 25, reccount.toString() + " folders");

	if(reccount == 0) { sql.close(); return; }
	newlb.addEventListener("onSelect", new folderjobslb_Listener());

	for(ilist : tlist)
	{
		ArrayList kabom = new ArrayList();
		
		folderstr = ilist.get("folderno_str");
		kabom.add(folderstr);

		kabom.add(ilist.get("datecreated").toString().substring(0,10));
		kabom.add(ilist.get("duedate").toString().substring(0,10));

		// get customer name from ar_code - will be slow if alot, scan 1 by 1
		iar_code = ilist.get("ar_code");
		iar_code = iar_code.toUpperCase().trim();
		icompanyname = (ilist.get("customer_name") == null) ? "--UNDEFINED--" : ilist.get("customer_name");

		if(!iar_code.equals(""))
		{
			// 11/6/2010: hardcode ar_code CASH and CASH USD in mysoft. Load customer info from table CashSales_CustomerInfo
			if(iar_code.equals("CASH") || iar_code.equals("CASH USD"))
			{
				csrec = getCashSalesCustomerInfo_Rec(folderstr); // get rec based on folder no
				icompanyname = "CshAct: Undefined";
				if(csrec != null) icompanyname = "CshAct: " + csrec.get("customer_name");
			}
		}

		kabom.add(icompanyname);

		// check if sent some docs from folder
		sqlstm = "select origid from stuff_emailed where linking_code='" + folderstr + "'";
		kckc = sql.firstRow(sqlstm);
		emailed = (kckc == null) ? "-----" : "-YES-";
		kabom.add(emailed);

		kabom.add(ilist.get("ar_code"));
		kabom.add(ilist.get("folder_origid").toString());

		strarray = convertArrayListToStringArray(kabom);
		insertListItems(newlb,strarray,JOBFOLDERS_PREFIX);
	}
	sql.close();
} // end of startFolderJobsSearch()

void viewDocument()
{
	if(!check_ListboxExist_SelectItem(doculist_holder,"doculinks_lb")) return;
	eorigid = doculinks_lb.getSelectedItem().getLabel();
	theparam = "docid=" + eorigid;
	uniqid = makeRandomId("vd");
	globalActivateWindow("miscwindows","qc/viewlinkingdocument.zul", uniqid, theparam, useraccessobj);
}

// The real-thing, send out selected COAs to client via email
void sendOutCOA_clicker()
{
	if(!check_ListboxExist_SelectItem(emails_holder,"custemails_lb")) return;
	if(!check_ListboxExist_SelectItem(doculist_holder,"doculinks_lb")) return;
	
	if (Messagebox.show("Really send COA to client..", "Are you sure?", 
		Messagebox.YES | Messagebox.NO, Messagebox.QUESTION) ==  Messagebox.NO) return;

	seldocs = doculinks_lb.getSelectedItems();
	emails = custemails_lb.getSelectedItems();

	ds_sql = als_DocumentStorage();
	if(ds_sql == null) { showMessageBox("Cannot connect to document server.."); return; }

	receivers = "";
	String[] recv_names = new String[emails.size()];
	String[] recv_emails = new String[emails.size()];
	cctt = 0;

	// get the list of email addresses selected
	for(dpi : emails)
	{
		receivers += getListcellItemLabel(dpi,2) + ",";
		recv_names[cctt] = getListcellItemLabel(dpi,1);
		recv_emails[cctt] = getListcellItemLabel(dpi,2);
		cctt++;
	}

	String[] tmpfnames = new String[seldocs.size()];
	String[] dorigid = new String[seldocs.size()];
	fnamecount = 0;

	// make tmp-file out of documents
	for(dpi : seldocs)
	{
		dorigid[fnamecount] = getListcellItemLabel(dpi,0); // get document origid
		sqlstm = "select file_name,file_data from DocumentTable where origid=" + dorigid[fnamecount];
		docrec = ds_sql.firstRow(sqlstm);
		
		if(docrec != null)
		{
			kfilename = docrec.get("file_name");
			kblob = docrec.get("file_data");
			kbarray = kblob.getBytes(1,(int)kblob.length());
			tmpfnames[fnamecount] = session.getWebApp().getRealPath("tmp/" + kfilename);
			outstream = new FileOutputStream(tmpfnames[fnamecount]);
			outstream.write(kbarray);
			outstream.close();
			fnamecount++;
		}
	}
	ds_sql.close();

	// now compose the email with attachments
	subjstr = "RE: [e-COA] " + selected_folderno;
	msgtxt =  "Job/Folder No.: " + selected_folderno + "\n";
	msgtxt += "This email contains the electronic version of the Certificate of Analysis\n\n";
	msgtxt += "This email is machine generated, DO NOT REPLY to this email.\n";
	msgtxt += "Please contact our customer service or sales person if you have any enquiries.\n\n";
	msgtxt += "-- e-LabMan\n";
	msgtxt += "ALS | Malaysia - Indonesia\n9 Jalan Astaka U8/84, Bukit Jelutong\n40150 Shah Alam, Selangor\n\n";
	msgtxt += "PHONE +60 3 7845 8257\nFAX +60 3 7845 8258\nEMAIL sales@alsglobal.com.my\n";
	msgtxt += "WEB http://www.alsglobal.com\n\n-Please consider the environment before printing this email-";

	sendEmailWithAttachment(SMTP_SERVER,ELABMAN_EMAIL,receivers,subjstr,msgtxt,tmpfnames);

	// delete temporary files before cabut
	for(i=0;i<tmpfnames.length;i++)
	{
		File f = new File(tmpfnames[i]);
		if(f.exists()) f.delete();
	}

	todaysdate = getDateFromDatebox(hiddendatebox);

	// update tables on stuff sent out
	sql = als_mysoftsql();
    if(sql == NULL) return;

	for(i=0;i <dorigid.length; i++)
	{
		for(j=0; j<recv_names.length; j++)
		{
			sqlstm = "insert into stuff_emailed (linking_code,docutype,docu_link,datesent,contact_name,contact_email,username) values " +
			"('" + selected_folderno + "','COA'," + dorigid[i] + ",'" + todaysdate + "','" + 
			recv_names[j] + "','" + recv_emails[j] + "','" + useraccessobj.username + "')";

			sql.execute(sqlstm);
		}
	}
	sql.close();

	startFolderJobsSearch(startdate,enddate,customer_tb); // do a refresh

	// put a bit of audit-trail later

	showMessageBox("COA sent..");
}

]]>
</zscript>

<div width="1200px">
<panel id="sendemail_coa_panel" title="Send COA via E-Mail to Client" border="normal" collapsible="true" closable="true">
<panelchildren>
<datebox id="hiddendatebox" format="yyyy-MM-dd" visible="false" />

<groupbox mold="3d" width="100%">
<caption label="Search parameters" />
	<hbox>
		<label value="Start date" style="font-size:9px"/>
		<datebox id="startdate" format="yyyy-MM-dd" />
		<separator width="3px"/>
		<label value="End date" style="font-size:9px" />
		<datebox id="enddate" format="yyyy-MM-dd" />
		<separator width="3px" />

		<label value="Customer" style="font-size:9px" />
		<textbox id="customer_tb" width="200px" style="font-size:9px" />
		<button label="Search/Refresh" style="font-size:9px" onClick="startFolderJobsSearch(startdate,enddate,customer_tb)" />
		<separator width="5px" />

		<button label="Folder details" style="font-size:9px" onClick="localPlayFolderDetails()" />
	</hbox>
</groupbox>

<hbox>
<!-- search results box -->
<groupbox mold="3d" width="650px">
	<caption label="Folders found.." />
	<vbox>
		<div id="folders_searchdiv" />
		<separator height="2px" />
		<label id="numofsamples_lbl" />
	</vbox>
</groupbox>

<groupbox id="workspace_gb" mold="3d" visible="false">
	<caption label="Workspace" />
	<hbox>
		<groupbox width="200px">
			<caption label="Documents" />
			<div id="doculist_holder" />
			<separator height="2px" />
			<button label="View document" style="font-size:9px" onClick="viewDocument()" />
		</groupbox>
		<groupbox>
			<caption label="Sent to.." />
			<div id="docusent_holder" />
		</groupbox>
	</hbox>
	<separator height="3px" />
	<div id="emails_holder" />
	<separator height="3px" />
	<button label="Send COA via e-mail" style="font-size:9px" onClick="sendOutCOA_clicker()" />
</groupbox>

</hbox>
<zscript>
<![CDATA[

setTodayDatebox(startdate);
setTodayDatebox(enddate);
setTodayDatebox(hiddendatebox);

// populateDropdownListbox(signator_lb,coa_signatories); // coa_signatories def in alsglobaldefs.zs

]]>
</zscript>

</panelchildren>
</panel>
</div>
</zk>
