<?xml version="1.0" encoding="UTF-8"?>
<?page id="quotation_maker_mod"?>
<zk>
<zscript src="../alsglobal/alsglobaldefs.zs" />
<zscript src="../alsglobal/alsglobalfuncs.zs" />
<zscript src="../alsglobal/alsglobal_guifuncs.zs" />
<zscript src="../alsglobal/alsglobal_sqlfuncs.zs" />
<zscript src="../alsglobal/securityfuncs.zs" />
<zscript src="../alsglobal/samplereg_funcs.zs" />
<zscript src="../alsglobal/doculink_funcs.zs" />
<zscript src="../alsglobal/divisiongroup_funcs.zs" />
<zscript src="../alsglobal/quotation_funcs.zs" />

<zscript>
<![CDATA[
/*
Title: Quotation Maker
Written by: Victor Wong
Date started: 14/7/2010

**NOTES**

*/

import java.util.*;
import java.text.*;
import java.math.BigDecimal;
import groovy.sql.Sql;
import org.zkoss.zk.ui.*;

myincludeid = Executions.getCurrent().getParameter("myid");
useraccessobj = getUserAccessObject();
if(useraccessobj == null) Executions.sendRedirect(MAINLOGIN_PAGE);

/*
// check usergroup access - no access, just close the panel.. min. level 1 can browser through the folder/job list
boolean can_access = check_UsergroupAccess(useraccessobj.origid,SAMPREG_USERGROUP,1);

if(!can_access)
{
	showAccessDenied_Box(useraccessobj);
	globalClosePanel(myincludeid);
}
*/

global_loaded_quote = "";
global_quote_status = "";
global_quote_curcode = "";
global_quote_owner = "";
global_selected_quoteitem = "";

old_show_quote = 1;

//---------- THESE CODES TO SHOW DIVISION->SECTION->TEST-PARAMETERS PANELS -----
ALS_stock_cat = "";
ALS_group_code = "";

global_selected_folder = "";
global_selected_mysoftcode = "";

// onSelect event for makeALSTestParametersListbox()
class ALSTestParametersLB_Listener implements org.zkoss.zk.ui.event.EventListener
{
	public void onEvent(Event event) throws UiException
	{
		global_selected_mysoftcode = tests_description_lb.getSelectedItem().getLabel(); // 1st col is mysoftcode
		insertitem_btn.setVisible(true);
	}
}

class testParam_DoubleClicker implements org.zkoss.zk.ui.event.EventListener
{
	public void onEvent(Event event) throws UiException
	{
		selitem = tests_description_lb.getSelectedItem();
		global_selected_mysoftcode = getListcellItemLabel(selitem,0);
		addQuoteItems_clicker();
	}
}


Object[] testparameters_lb_headers = {
	new listboxHeaderObj("mysoftcode",false),
	new listboxHeaderObj("Test",true),
	new listboxHeaderObj("Method",true),
	new listboxHeaderObj("Price",true),
};

// Populate division column - refer to mysoft.stockmasterdetails.stock_cat
// nominal_code=glcode=5xxxxx = services we sell
// istock_cat = as in stockmasterdetails.stock_cat
void populateTestParametersColumn(Div iwhichdiv, String istock_cat, String igroupcode)
{
	sql = als_mysoftsql();
	if(sql == null ) return;

	sqlstatem = "select id,description,description2,selling_price from stockmasterdetails where item_type='Service Item' and nominal_code like '5%' " + 
		"and stock_cat='" + istock_cat + "' " +
		"and groupcode='" + igroupcode + "' " +
		"order by description" ;

	tlist = sql.rows(sqlstatem);
	sql.close();

	if(tlist.size() < 1) return;

	Listbox newlb = makeVWListbox(iwhichdiv, testparameters_lb_headers, "tests_description_lb", 12);
	newlb.addEventListener("onSelect", new ALSTestParametersLB_Listener());

	for(ilist : tlist)
	{
		ArrayList kabom = new ArrayList();
		
		desc1 = (ilist.get("description") != null) ? ilist.get("description") : "";
		desc2 = (ilist.get("description2") != null) ? ilist.get("description2") : "";

		kabom.add(ilist.get("id").toString());
		kabom.add(desc1);
		kabom.add(desc2);
		kabom.add("RM " + ilist.get("selling_price").toString());

		strarray = convertArrayListToStringArray(kabom);
		insertListItems(newlb,strarray,"true");
	}

	dc_obj = new testParam_DoubleClicker();
	setDoubleClick_ListItems(newlb, dc_obj);
	
} // end of populateTestParametersColumn()

// onSelect event for makeALSSectionListbox()
class ALSSectionLB_Listener implements org.zkoss.zk.ui.event.EventListener
{
	public void onEvent(Event event) throws UiException
	{
		ALS_group_code = section_groupcode_lb.getSelectedItem().getLabel();
		// populate section column
		//iwhatcode = convertLongNameToCode(als_divisions, iwhat);
		populateTestParametersColumn(testparameters_column, ALS_stock_cat, ALS_group_code);
	}
}

Object[] alssection_lb_headers = {
	new listboxHeaderObj("",true)
};

// Populate division column - refer to mysoft.stockmasterdetails.stock_cat
// nominal_code=glcode=5xxxxx = services we sell
// istock_cat = as in stockmasterdetails.stock_cat
void populateSectionColumn(Div iwhichdiv, String istock_cat)
{
	sql = als_mysoftsql();
	if(sql == null ) return;

	sqlstatem = "select distinct groupcode from stockmasterdetails where item_type='Service Item' and nominal_code like '5%' " + 
		"and stock_cat='" + istock_cat + "' order by groupcode" ;

	tlist = sql.rows(sqlstatem);
	sql.close();

	// save istock_cat , to be used later in ALSSectionLB_Listener
	ALS_stock_cat = istock_cat;

	if(tlist.size() == 0) return;

	Listbox newlb = makeVWListbox(iwhichdiv, alssection_lb_headers, "section_groupcode_lb", 14);
	newlb.addEventListener("onSelect", new ALSSectionLB_Listener());

	String[] strarray = new String[1];

	for(ilist : tlist)
	{
		// strarray[0] = convertCodeToLongName(als_divisions,ilist.get("stock_cat"));
		strarray[0] = ilist.get("groupcode");
		insertListItems(newlb,strarray,"true");
	}
} // end of populateSectionColumn()

// onSelect event for makeALSDivisionListbox()
class ALSDivisionLB_Listener implements org.zkoss.zk.ui.event.EventListener
{
	public void onEvent(Event event) throws UiException
	{
		iwhat = division_stockcat_lb.getSelectedItem().getLabel();
		// populate section column
		iwhatcode = convertLongNameToCode(als_divisions, iwhat);
		populateSectionColumn(section_column,iwhatcode);
	}
}

Object[] alsdivision_lb_headers = {
	new listboxHeaderObj("",true)
};

// Populate division column - refer to mysoft.stockmasterdetails.stock_cat
// nominal_code=glcode=5xxxxx = services we sell
void populateDivisionColumn(Div iwhichdiv)
{
	sql = als_mysoftsql();
	if(sql == null ) return;
	sqlstatem = "select distinct stock_cat from stockmasterdetails where item_type='Service Item' and nominal_code like '5%' order by stock_cat" ;
	tlist = sql.rows(sqlstatem);
	sql.close();
	if(tlist.size() == 0) return;
	Listbox newlb = makeVWListbox(iwhichdiv, alsdivision_lb_headers, "division_stockcat_lb", 14);
	newlb.addEventListener("onSelect", new ALSDivisionLB_Listener());
	String[] strarray = new String[1];
	for(ilist : tlist)
	{
		strarray[0] = convertCodeToLongName(als_divisions,ilist.get("stock_cat"));
		insertListItems(newlb,strarray,"true");
	}
} // end of populateDivisionColumn()

//------------- END OF SHOW DIVISION->SECTION->TEST-PARAMETERS PANELS -----------------

// true = disable all fields, false = enable
void disableQuote_MetadataFields(boolean iwhat)
{
	qt_ar_code.setDisabled(iwhat);
	qt_address1.setDisabled(iwhat);
	qt_address2.setDisabled(iwhat);
	qt_city.setDisabled(iwhat);
	qt_zipcode.setDisabled(iwhat);
	qt_state.setDisabled(iwhat);
	qt_country.setDisabled(iwhat);
	qt_telephone.setDisabled(iwhat);
	qt_fax.setDisabled(iwhat);
	qt_contact_person1.setDisabled(iwhat);
	qt_email.setDisabled(iwhat);
	qt_notes.setDisabled(iwhat);
	qt_exchangerate.setDisabled(iwhat);
	qt_curcode.setDisabled(iwhat);
}

Object[] quotations_lb_headers = {
	new listboxHeaderObj("origid",false),
	new listboxHeaderObj("ar_code",false),
	new listboxHeaderObj("Q#",true),
	new listboxHeaderObj("Customer",true),
	new listboxHeaderObj("Crt.Date",true),
	new listboxHeaderObj("Last.Update",true),
	new listboxHeaderObj("User",true),
	new listboxHeaderObj("Q.Stat",true),
};

// onSelect for showQuotations_Listbox()
class quotes_lb_Listener implements org.zkoss.zk.ui.event.EventListener
{
	public void onEvent(Event event) throws UiException
	{
		selitem = quotations_lb.getSelectedItem();
		loadQuotation_clicker();
	}
}

// itype: 0=previous, 1=show owner's by date, 2=load all by date, 3=load all by date and searchstring
// 4=by QT number
void showQuotations_Listbox(int itype)
{
	Listbox newlb = makeVWListbox(quotes_div, quotations_lb_headers, "quotations_lb", 5);
	
	showtype = itype;
	if(itype == 0) showtype = old_show_quote;
	else old_show_quote = itype;

	srchstr = replaceSingleQuotes(quote_search.getValue());
	sdate = getDateFromDatebox(startdate);
    edate = getDateFromDatebox(enddate);
	qtnum = replaceSingleQuotes(qtnumber_search.getValue());

	basesql = "select top 100 origid,ar_code,customer_name,datecreated,lastupdate,username," + 
	"qstatus,deleted from elb_Quotations ";
	sufsql = " order by datecreated desc";
	othercheck = " where username='" + useraccessobj.username + "' and deleted=0 ";
	sqlstm = basesql;

	switch(showtype)
	{
		case 1:
			sqlstm += othercheck + " and datecreated between '" + sdate + "' and '" + edate + "' " + sufsql;
			break;
		case 2:
			sqlstm += "where datecreated between '" + sdate + "' and '" + edate + "' " + sufsql;
			break;
		case 3:
			sqlstm += "where (customer_name like '%" + srchstr + "%' or address1 like '%" + srchstr + "%' or " +
			"address2 like '%" + srchstr + "%' or contact_person1 like '%" + srchstr + "%') " +
			"and datecreated between '" + sdate + "' and '" + edate + "' " + sufsql;
			break;
		case 4:
			sqlstm += "where origid=" + qtnum;
			break;
	}

	if(useraccessobj.accesslevel > 8) sqlstm = basesql + sufsql;

	sql = als_mysoftsql();
	if(sql == null ) return;
	qtrows = sql.rows(sqlstm);
	sql.close();

	if(qtrows.size() == 0) return;
	if(qtrows.size() > 5) newlb.setRows(20);

	newlb.addEventListener("onSelect", new quotes_lb_Listener());

	for(dpi : qtrows)
	{
		ArrayList kabom = new ArrayList();

		origid = dpi.get("origid").toString();
		kabom.add(origid);
		kabom.add(dpi.get("ar_code"));

		// text-decoration: line-through
		delstr = (dpi.get("deleted") == 1) ? "[DEL] " : "";
		qcode = delstr + QUOTE_PREFIX + origid;
		kabom.add(qcode);

		customername = checkEmptyString(trimListitemLabel(dpi.get("customer_name"),30));
		kabom.add(customername);

		datecreated = dpi.get("datecreated").toString().substring(0,10);
		if(datecreated.equals("1900-01-01")) datecreated = "---";

		kabom.add(datecreated);

		lastup = "---";
		lastupdate = dpi.get("lastupdate");

		if(lastupdate != null)
		{
			kkx = lastupdate.toString().substring(0,10);
			if(!kkx.equals("1900-01-01")) lastup = kkx;
		}

		kabom.add(lastup);

		kabom.add(dpi.get("username"));
		kabom.add(dpi.get("qstatus"));

		strarray = convertArrayListToStringArray(kabom);
		insertListItems(newlb,strarray,"false");
	}
} // end showQuotations_Listbox()

// Create a new quote - whatelse!!
void newQuotation_clicker()
{
	todaysdate = getDateFromDatebox(hiddendatebox);
	insertQuotation_Rec(useraccessobj.username,todaysdate);
	showQuotations_Listbox(0);
}

// This textbox onDrop event knockoff from registernew_samples_v2.zul - modded for this
void dropAR_Code(Event event)
{
	Component dragged = event.dragged;
	iarcode = dragged.getLabel();

	comprec = getCompanyRecord(iarcode); // func in alsglobal_sqlfuncs.zs

	if(comprec != null)
	{
		self.setValue(iarcode);

		// populate fields
		qt_customer_name.setValue(comprec.get("customer_name"));
		qt_contact_person1.setValue(comprec.get("contact_person1"));
		qt_address1.setValue(comprec.get("address1"));
		qt_address2.setValue(comprec.get("address2") + comprec.get("address3"));
		qt_telephone.setValue(comprec.get("telephone_no"));
		qt_fax.setValue(comprec.get("fax_no"));
		qt_email.setValue(comprec.get("E_mail"));

		//qt_exchangerate.setValue(comprec.get("
		matchListboxItems(qt_curcode,comprec.get("CurCode"));
	}
}

// 14/1/2011: use built-in customer selector
void playAssignCustomerWindow()
{
//	uniqwindowid = makeRandomId("xqx");
//	globalActivateWindow("miscwindows","dispatch/customer_search_popup.zul", uniqwindowid, "getcust=1",useraccessobj);
	selectcustomer_popup.open(cfind_holder);
}

// Load and show quotation's metadata
void loadQuotation_clicker()
{
//tab1 quotes_div, quotations_lb_headers, "quotations_lb" QUOTE_PREFIX
	if(!check_ListboxExist_SelectItem(quotes_div, "quotations_lb")) return;

	qtid = quotations_lb.getSelectedItem().getLabel(); // 1st col is elb_Quotations.origid
	qtrec = getQuotation_Rec(qtid);

	tab1.setLabel("Quotation: " + QUOTE_PREFIX + qtid + " :: " + qtrec.get("customer_name"));
	quote_metadata_div.setVisible(true);

	if(qtrec == null) return;

	global_loaded_quote = qtrec.get("origid").toString();

	qtarcode = qtrec.get("ar_code");
	qt_ar_code.setValue(qtarcode);

	qt_customer_name.setValue(qtrec.get("customer_name"));

	qt_customer_name.setDisabled(false);
	// if this quote is based on client in system - disable the customer-name box
	if(!qtarcode.equals("")) qt_customer_name.setDisabled(true);

	qt_address1.setValue(checkNullString(qtrec.get("address1")));
	qt_address2.setValue(checkNullString(qtrec.get("address2")));
	qt_city.setValue(checkNullString(qtrec.get("city")));
	qt_zipcode.setValue(checkNullString(qtrec.get("zipcode")));
	qt_state.setValue(checkNullString(qtrec.get("state")));
	qt_country.setValue(checkNullString(qtrec.get("country")));
	qt_telephone.setValue(checkNullString(qtrec.get("telephone")));
	qt_fax.setValue(checkNullString(qtrec.get("fax")));
	qt_contact_person1.setValue(checkNullString(qtrec.get("contact_person1")));
	qt_email.setValue(checkNullString(qtrec.get("email")));
	qt_notes.setValue(checkNullString(qtrec.get("notes")));

	doexh = qtrec.get("exchangerate");
	exhrate = new BigDecimal(1);
	if(doexh != null) exhrate = new BigDecimal(doexh);

	qt_exchangerate.setValue(exhrate);

	global_quote_curcode = qtrec.get("curcode");
	matchListboxItems(qt_curcode,global_quote_curcode);
	global_quote_status = qtrec.get("qstatus");

	//qt_salesperson
	salesm = (qtrec.get("salesperson") == null) ? "" : qtrec.get("salesperson");
	matchListboxItemsColumn(qt_salesperson,salesm,1);

	terms = (qtrec.get("terms") == null) ? "" : qtrec.get("terms");
	matchListboxItemsColumn(qt_terms,terms,0);

	global_quote_owner = qtrec.get("username");

	showQuoteItems();
	savequote_btn.setDisabled(false);
	disableQuote_MetadataFields(false);

	if(!global_quote_status.equals(QTSTAT_NEW)) // && useraccessobj.accesslevel < 9) // admin can do
	{
		savequote_btn.setDisabled(true);
		disableQuote_MetadataFields(true);
	}
}

// Save whatever metadata entered for quotation
void saveQuotation_clicker()
{
	ar_code = replaceSingleQuotes(qt_ar_code.getValue());
	customer_name = replaceSingleQuotes(qt_customer_name.getValue());
	
	if(customer_name.equals(""))
	{
		showMessageBox("Cannot save - Customer.Name is blank");
		return;
	}
	
	address1 = replaceSingleQuotes(qt_address1.getValue());
	address2 = replaceSingleQuotes(qt_address2.getValue());
	city = replaceSingleQuotes(qt_city.getValue());
	zipcode = replaceSingleQuotes(qt_zipcode.getValue());
	state = replaceSingleQuotes(qt_state.getValue());
	country = replaceSingleQuotes(qt_country.getValue());
	telephone = replaceSingleQuotes(qt_telephone.getValue());
	fax = replaceSingleQuotes(qt_fax.getValue());
	contact_person1 = replaceSingleQuotes(qt_contact_person1.getValue());
	email = replaceSingleQuotes(qt_email.getValue());
	notes = replaceSingleQuotes(qt_notes.getValue());
	curcode = qt_curcode.getSelectedItem().getLabel();
	exchangerate = qt_exchangerate.getValue();

	selitem = qt_terms.getSelectedItem();
	terms = getListcellItemLabel(selitem,0);

	selitem = qt_salesperson.getSelectedItem();
	salesp = getListcellItemLabel(selitem,1);

	sql = als_mysoftsql();
	if(sql == null ) return;
	thecon = sql.getConnection();

	pstmt = thecon.prepareStatement("update elb_Quotations set ar_code=?,customer_name=?,address1=?,address2=?,city=?,zipcode=?,state=?,country=?," +
	"telephone=?,fax=?,contact_person1=?,email=?,notes=?,curcode=?,exchangerate=?,salesperson=?,terms=? where origid=?");

	pstmt.setString(1,ar_code);
	pstmt.setString(2,customer_name);
	pstmt.setString(3,address1);
	pstmt.setString(4,address2);
	pstmt.setString(5,city);
	pstmt.setString(6,zipcode);
	pstmt.setString(7,state);
	pstmt.setString(8,country);

	pstmt.setString(9,telephone);
	pstmt.setString(10,fax);
	pstmt.setString(11,contact_person1);
	pstmt.setString(12,email);
	pstmt.setString(13,notes);
	pstmt.setString(14,curcode);
	pstmt.setFloat(15,exchangerate.floatValue());

	pstmt.setString(16,salesp);
	pstmt.setString(17,terms);

	pstmt.setInt(18,Integer.parseInt(global_loaded_quote));

	pstmt.executeUpdate();
	sql.close();
	showMessageBox("Quotation's metadata saved..");
	showQuotations_Listbox(0);
	
	editquoteitem_btn.setDisabled(false);
	deletequoteitem_btn.setDisabled(false);
}

// Will change quotation status from NEW to COMMITTED - will say already sent to customer, cannot change anything - only admin modd
void commitQuotation_clicker()
{
	if(!check_ListboxExist_SelectItem(quotes_div,"quotations_lb")) return;

	// if it's committed.. just return
	if(global_quote_status.equals(QTSTAT_COMMIT)) return;

	// before committing the quotation, make sure mandatory fields are populated..
	customer_name = replaceSingleQuotes(qt_customer_name.getValue());
	contact_person1 = replaceSingleQuotes(qt_contact_person1.getValue());

	shwmsg = "";

	if(customer_name.equals("") || contact_person1.equals("")) shwmsg = "Customer.Name and Contact.Person is mandatory..";

	// check if there're items quoted
	if(quote_items_lb.getItemCount() == 0) shwmsg = "Duh.. no items in quotation";

	if(!shwmsg.equals(""))
	{
		showMessageBox(shwmsg);
		return;
	}

	if (Messagebox.show("Once quotation is committed, you cannot change anything..", "Are you sure?", 
		Messagebox.YES | Messagebox.NO, Messagebox.QUESTION) ==  Messagebox.NO) return;

	setQuotation_Status(global_loaded_quote,QTSTAT_COMMIT);
	saveQuotation_clicker(); // save quotation metadata

	loadQuotation_clicker(); // reload whatever quotation's metadata again, to disable some buttons/stuff
	showQuotations_Listbox(0);

	// 19/1/2011: disable some stuff
	disableQuote_MetadataFields(true);
	deletequoteitem_btn.setDisabled(true);
	editquoteitem_btn.setDisabled(true);
	
}

// Auto select those test-parameters boxes - knockoff from assign_tests_v2.zul - modded abit le
void autoAssignTestParametersBox(String imysoftcode)
{
	istockrec = getStockMasterDetails(imysoftcode.toString());
	if(istockrec == null) return;

	istockcat = istockrec.get("Stock_Cat");
	igroupcode = istockrec.get("GroupCode");

	populateSectionColumn(section_column,istockcat);
	populateTestParametersColumn(testparameters_column,istockcat,igroupcode);

	// auto-select the thing in the listboxes.. tricky part
	divisionln = convertCodeToLongName(als_divisions,istockcat);

	matchListboxItems(division_stockcat_lb, divisionln);
	matchListboxItems(section_groupcode_lb, igroupcode);

	tscode = istockrec.get("ID").toString();
	matchListboxItems(tests_description_lb,tscode);
}

void showQuoteItems_Metadata()
{
	qirec = getQuoteItem_Rec(global_selected_quoteitem);
	if(qirec == null) return;

	qi_description.setValue(qirec.get("description"));
	qi_description2.setValue(qirec.get("description2"));
	qi_unitprice.setValue(qirec.get("unitprice").toString());
	qi_quantity.setValue(qirec.get("quantity").toString());
	qi_discount.setValue(qirec.get("discount").toString());
	qi_lor.setValue(qirec.get("lor"));

	editquoteitem_btn.setLabel("Update..");
}

void clearQuoteItem_inputs()
{
	global_selected_quoteitem = ""; // reset global
	qi_description.setValue("");
	qi_description2.setValue("");
	qi_unitprice.setValue("");
	qi_quantity.setValue("");
	qi_discount.setValue("");
	qi_lor.setValue("");

	editquoteitem_btn.setLabel("New..");
}

// onSelect listener for showQuoteItems()
class quote_items_lb_Listener implements org.zkoss.zk.ui.event.EventListener
{
	public void onEvent(Event event) throws UiException
	{
		selitem = quote_items_lb.getSelectedItem();
		mysoftc = getListcellItemLabel(selitem,1);
		global_selected_quoteitem = getListcellItemLabel(selitem,0);
		//autoAssignTestParametersBox(mysoftc);
		showQuoteItems_Metadata();
	}
}

// quote_items_div quote_items_lb global_loaded_quote global_quote_status
void showQuoteItems()
{
Object[] quote_items_lb_headers = {
	new listboxHeaderObj("origid",false),
	new listboxHeaderObj("mysoftcode",false),
	new listboxHeaderObj("###",true),
	new listboxHeaderObj("Tests",true),
	new listboxHeaderObj("Method.Ref",true),
	new listboxHeaderObj("Stk",true),
	new listboxHeaderObj("LOR",true),
	new listboxHeaderObj("U.P",true),
	new listboxHeaderObj("Qty",true),
	new listboxHeaderObj("Dsct",true),
	new listboxHeaderObj("Gross",true),
	new listboxHeaderObj("Nett",true),
};

	if(global_loaded_quote.equals("")) return;

	Listbox newlb = makeVWListbox(quote_items_div, quote_items_lb_headers, "quote_items_lb", 5);
	quoteitems_meta_div.setVisible(true);

	sql = als_mysoftsql();
	if(sql == null ) return;
	sqlstm = "select origid,mysoftcode,description,description2,LOR,unitprice,quantity,discount,total_gross,total_net from elb_Quotation_Items " +
	"where quote_parent=" + global_loaded_quote + " order by origid";
	qitems = sql.rows(sqlstm);
	sql.close();

	if(qitems.size() < 1) return;

	bunvalue = (qitems.size() > 10) ? 15 : 10;
	newlb.setRows(bunvalue);
	rowcounter = 1;
	
	//newlb.setCheckmark(true);
	//newlb.setMultiple(true);

	newlb.addEventListener("onSelect", new quote_items_lb_Listener());

	grandtotal = 0.0;
	DecimalFormat nf = new DecimalFormat("##.00");

	for(dpi : qitems)
	{
		ArrayList kabom = new ArrayList();
		mysc = dpi.get("mysoftcode").toString();
		kabom.add(dpi.get("origid").toString());
		kabom.add(mysc);

		kabom.add(rowcounter.toString() + ".");
		kabom.add(trimListitemLabel(dpi.get("description"),25));
		kabom.add(trimListitemLabel(dpi.get("description2"),25));

		stkitem = (mysc.equals("") || mysc.equals("0")) ? "---" : "-Y-";
		kabom.add(stkitem);

		thelor = (dpi.get("LOR").equals("")) ? "---" : dpi.get("LOR");
		kabom.add(thelor);
		// float thing need to format abit, show 2 decimal places only
		kabom.add(nf.format(dpi.get("unitprice")));
		kabom.add(dpi.get("quantity").toString());
		discstr = (dpi.get("discount") == 0) ? "---" : nf.format(dpi.get("discount"));
		kabom.add(discstr);
		kabom.add(nf.format(dpi.get("total_gross")));
		total_net = dpi.get("total_net");
		grandtotal += total_net;
		kabom.add(nf.format(total_net));
		strarray = convertArrayListToStringArray(kabom);
		insertListItems(newlb,strarray,"false");
		rowcounter++;
	}

	quoteitems_grandtotal_lbl.setValue("Grand total: " + global_quote_curcode + " " + nf.format(grandtotal));
	deletequoteitem_btn.setDisabled(false);
	editquoteitem_btn.setDisabled(false);

	if(!global_quote_status.equals(QTSTAT_NEW))
	{
		deletequoteitem_btn.setDisabled(true);
		editquoteitem_btn.setDisabled(true);
	}
}

// Popup - update quote-item clicker
// updateQuoteItem_Value( java.lang.String, float, float, java.lang.String, java.lang.String, java.lang.String, java.lang.String )
void updateQuoteItem_clicker()
{
	if(global_loaded_quote.equals("")) return; // no quote loaded, return lor

	unitprice = replaceSingleQuotes(qi_unitprice.getValue());
	quantity = replaceSingleQuotes(qi_quantity.getValue());
	discount = replaceSingleQuotes(qi_discount.getValue());
	lor = replaceSingleQuotes(qi_lor.getValue());
	desc1 = replaceSingleQuotes(qi_description.getValue());
	desc2 = replaceSingleQuotes(qi_description2.getValue());

	if(unitprice.equals("")) unitprice = "0";
	if(quantity.equals("")) quantity = "1";
	if(discount.equals("")) discount = "0";

	if(!global_selected_quoteitem.equals("")) // it's an update
	{
		updateQuoteItem_Value(global_selected_quoteitem,unitprice,discount,quantity,lor,desc1,desc2);
	}
	else // it's a new item insert
	{
		curcode = qt_curcode.getSelectedItem().getLabel();
		dunitp = Double.parseDouble(unitprice);
		insertQuoteItem_Rec(global_loaded_quote,"0",desc1,desc2,curcode,dunitp);
	}

	showQuoteItems(); // refresh quote-items listbox
	clearQuoteItem_inputs();
}

// quote_items_div quote_items_lb global_loaded_quote global_quote_status
// tests_description_lb testparameters_column global_selected_mysoftcode
void addQuoteItems_clicker()
{
	if(global_loaded_quote.equals("")) return;
	if(!global_quote_status.equals(QTSTAT_NEW))
	{
		showMessageBox("Quotation already committed, cannot add item.");
		return;
	}

	if(!check_ListboxExist_SelectItem(testparameters_column,"tests_description_lb")) return;

	// check if mysoftcode already in list - either don't insert or add elb_Quotation_Items.quantity
	if(ExistInListbox(quote_items_lb,global_selected_mysoftcode,1))
	{
		showMessageBox("Item is already in your quotation.. update quantity instead");
		return;
	}

	stkrec = getMySoftMasterProductRec(global_selected_mysoftcode);
	if(stkrec == null) return;

	curcode = qt_curcode.getSelectedItem().getLabel();

	insertQuoteItem_Rec(global_loaded_quote, global_selected_mysoftcode, 
 		stkrec.get("Description"), stkrec.get("Description2"), curcode, stkrec.get("Selling_Price"));

	showQuoteItems(); // refresh quote-items listbox
}

// delete a quote-item clicker
void deleteQuoteItem_clicker()
{
	if(global_loaded_quote.equals("")) return;
	if(global_selected_quoteitem.equals("")) return;

	if(!global_quote_status.equals(QTSTAT_NEW))
	{
		showMessageBox("Quotation already committed, cannot delete item.. too bad");
		return;
	}

	qi_origid = quote_items_lb.getSelectedItem().getLabel(); // 1st col is elb_Quotation_Items.origid
	deleteQuoteItem_Rec(qi_origid);

	showQuoteItems(); // refresh quote-items listbox
	clearQuoteItem_inputs();
}

// Admin uncommit quotation butt. -- haha
void adminUncomit_clicker()
{
	if(!check_ListboxExist_SelectItem(quotes_div,"quotations_lb")) return;

	qtid = quotations_lb.getSelectedItem().getLabel(); // 1st col is elb_Quotations.origid
	setQuotation_Status(qtid,QTSTAT_NEW);

	showQuotations_Listbox(0); // refresh lor
}

// Database func: toggle elb_Quotations.deleted flag
void toggleQuotation_DeletedFlag(String iorigid)
{
	sql = als_mysoftsql();
	if(sql == null ) return null;
	sqlstm = "select deleted from elb_Quotations where origid=" + iorigid;
	retval = sql.firstRow(sqlstm);
	if(retval != null)
	{
		toggler = (retval.get("deleted") == 1) ? 0 : 1;
		sqlstm2 = "update elb_Quotations set deleted=" + toggler.toString() + " where origid=" + iorigid;
		sql.execute(sqlstm2);
	}
	sql.close();
}

// Just toggle the deleted flag
void adminDeleteQuote_clicker()
{
	if(!check_ListboxExist_SelectItem(quotes_div,"quotations_lb")) return;
	qtid = quotations_lb.getSelectedItem().getLabel(); // 1st col is elb_Quotations.origid
	toggleQuotation_DeletedFlag(qtid);
	showQuotations_Listbox(0); // refresh lor
}

// Hard delete quote and items too
void hardDeleteQuote_clicker()
{
	if(!check_ListboxExist_SelectItem(quotes_div,"quotations_lb")) return;
	qtid = quotations_lb.getSelectedItem().getLabel(); // 1st col is elb_Quotations.origid
	sql = als_mysoftsql();
	if(sql == null ) return null;
	sqlstm = "delete from elb_Quotations where origid=" + qtid;
	sql.execute(sqlstm);
	sqlstm = "delete from elb_Quotation_items where quote_parent=" + qtid;
	sql.execute(sqlstm);
	sql.close();
	showQuotations_Listbox(0); // refresh lor
}

// To populate salesman drop-down - can be used for other mods
void populateSalesman_dropdown(Div idiv)
{
	Object[] sm_lb_headers = {
	new dblb_HeaderObj("SM.Name",true,"salesman_name",1),
	new dblb_HeaderObj("SM.Code",false,"salesman_code",1),
	};

	sql = als_mysoftsql();
    if(sql == NULL) return;
	sqlstm = "select salesman_code,salesman_name from salesman";
	Listbox newlb = makeVWListbox_onDB(idiv,sm_lb_headers,"qt_salesperson",1,sql,sqlstm);
	sql.close();
	newlb.setMold("select");
	newlb.setStyle("font-size:9px");
}

// terms distinct extracted from customer.credit_period - can be used for other mods
void populateTerms_dropdown(Div idiv)
{
	Object[] terms_lb_headers = {
	new dblb_HeaderObj("terms",true,"credit_period",1),
	};

	sql = als_mysoftsql();
    if(sql == NULL) return;
	sqlstm = "select distinct credit_period from customer order by credit_period";
	Listbox newlb = makeVWListbox_onDB(idiv,terms_lb_headers,"qt_terms",1,sql,sqlstm);
	sql.close();
	newlb.setMold("select");
	newlb.setStyle("font-size:9px");
}

void printQuotation_clicker()
{
	if(!check_ListboxExist_SelectItem(quotes_div,"quotations_lb")) return;

	if(useraccessobj.accesslevel != 9) // admin: print any quotation - debugging purposes
	{
	shwmsg = "";

	// check if quotation is committed.. if not, don't let ppl print
	if(global_quote_status.equals(QTSTAT_NEW)) shwmsg = "Please commit the quotation before printing/exporting..";
	if(global_quote_status.equals(QTSTAT_RETIRED)) shwmsg = "Quotation is already RETIRED, why do you want to print it?";

	if(!shwmsg.equals(""))
	{
		showMessageBox(shwmsg);
		return;
	}
	}

	theparam = "qid=" + global_loaded_quote;
	uniqid = makeRandomId("pq");
	globalActivateWindow("miscwindows","sales/printquotation.zul", uniqid, theparam, useraccessobj);
}

void retireQuotation_clicker()
{
	if(!check_ListboxExist_SelectItem(quotes_div,"quotations_lb")) return;

	shwmsg = "";

	if(global_quote_status.equals(QTSTAT_RETIRED)) shwmsg = "This quotation is already RETIRED, need not do it again..";
	if(global_quote_status.equals(QTSTAT_NEW)) shwmsg = "This quotation is not even committed.. cannot RETIRE";
	if(!global_quote_owner.equals(useraccessobj.username)) shwmsg = "You're not even the owner of this quotation.. cannot RETIRE";

	if(!shwmsg.equals(""))
	{
		showMessageBox(shwmsg);
		return;
	}

	if (Messagebox.show("About to retire this quotation, once retired, prices in this quote will be ineffective for this client..", "Are you sure?", 
		Messagebox.YES | Messagebox.NO, Messagebox.QUESTION) ==  Messagebox.NO) return;

	setQuotation_Status(global_loaded_quote,QTSTAT_RETIRED);
	showQuotations_Listbox(0); // refresh lor
}

// ---- Customer search popup stuff ---- can be used in other modules

void showCustomerInfo(String iarcode)
{
	comprec = getCompanyRecord(iarcode);
	if(comprec == null) return;

	cfind_company_lbl.setValue(checkNullString_RetWat(comprec.get("customer_name"),"---UNDEFINED---"));
	cfind_address1_lbl.setValue(checkNullString_RetWat(comprec.get("address1"),"------"));
	cfind_address2_lbl.setValue(checkNullString_RetWat(comprec.get("address2"),"------"));
	cfind_address3_lbl.setValue(checkNullString_RetWat(comprec.get("address3"),"------"));
	//cfind_address4_lbl.setValue(checkNullString_RetWat(comprec.get("Address4"),"------"));
	cfind_tel_lbl.setValue(checkNullString_RetWat(comprec.get("telephone_no"),"-----"));
	cfind_fax_lbl.setValue(checkNullString_RetWat(comprec.get("fax_no"),"-----"));
	cfind_contact_lbl.setValue(checkNullString_RetWat(comprec.get("contact_person1"),"-----"));
	cfind_email_lbl.setValue(checkNullString_RetWat(comprec.get("E_mail"),"-----"));

	// if(iarcode.equals("BLACKLIST")) custinfo_gb.setStyle("background:#FF3333");
}

class searchcustomersLB_Listener implements org.zkoss.zk.ui.event.EventListener
{
	public void onEvent(Event event) throws UiException
	{
		selitem = event.getReference();
		tarcode = getListcellItemLabel(selitem,0);
		showCustomerInfo(tarcode);
	}
}

// onDoubleClick listener for searchCustomers()
class searchcustLBDoubleClick_Listener implements org.zkoss.zk.ui.event.EventListener
{
	public void onEvent(Event event) throws UiException
	{
		selitem = customers_lb.getSelectedItem();
		sarcode = getListcellItemLabel(selitem,0);
		if(sarcode.equals("BLACKLIST")) return;

		comprec = getCompanyRecord(sarcode);
		if(comprec != null)
		{
			// customize this part if need to use in other module - where to show the selected client info
			qt_ar_code.setValue(comprec.get("ar_code"));

			// codes taken from dropAR_Code()
			// populate fields
			qt_customer_name.setValue(comprec.get("customer_name"));
			qt_contact_person1.setValue(comprec.get("contact_person1"));
			qt_address1.setValue(comprec.get("address1"));
			qt_address2.setValue(comprec.get("address2") + comprec.get("address3"));
			qt_telephone.setValue(comprec.get("telephone_no"));
			qt_fax.setValue(comprec.get("fax_no"));
			qt_email.setValue(comprec.get("E_mail"));

			//qt_exchangerate.setValue(comprec.get("
			tterms = comprec.get("credit_period");
			ssman = comprec.get("Salesman_code");

			if(tterms != null) matchListboxItems(qt_terms,tterms);
			if(ssman != null) matchListboxItems(qt_salesperson,ssman);

			matchListboxItems(qt_curcode,comprec.get("CurCode"));
		}
		
		selectcustomer_popup.close();
	}
}

void searchCustomers()
{
Object[] clients_lb_headers = {
	new listboxHeaderObj("AR_CODE",true),
	new listboxHeaderObj("Company",true),
	};

	schtext = replaceSingleQuotes(cust_search_tb.getValue());
	if(schtext.equals("")) return;

	Listbox newlb = makeVWListbox(foundcustomer_holder, clients_lb_headers, "customers_lb", 5);

	sql = als_mysoftsql();
    if(sql == NULL) return;

	sqlstm = "select top 50 ar_code,customer_name,credit_period from customer where " +
	"ar_code like '%" + schtext + "%' or " +
	"customer_name like '%" + schtext + "%' or " +
	"address1 like '%" + schtext + "%' or " +
	"address2 like '%" + schtext + "%' or " +
	"address3 like '%" + schtext + "%' or " +
	"address4 like '%" + schtext + "%' or " +
	"contact_person1 like '%" + schtext + "%' " +
	"order by customer_name";

	custrecs = sql.rows(sqlstm);
	sql.close();

	if(custrecs.size() == 0) return;
	newlb.setRows(10);
	newlb.addEventListener("onSelect", new searchcustomersLB_Listener());

	for(dpi : custrecs)
	{
		ArrayList kabom = new ArrayList();

		credp = dpi.get("credit_period");
		arcode = dpi.get("ar_code");
		if(credp.equals("BLACKLIST")) arcode = "BLACKLIST";
		kabom.add(arcode);
		kabom.add(dpi.get("customer_name"));
		strarray = convertArrayListToStringArray(kabom);
		insertListItems(newlb,strarray,"false");
	}
	
	dc_obj = new searchcustLBDoubleClick_Listener();
	setDoubleClick_ListItems(newlb, dc_obj);
}
// ---- ENDOF Customer search popup stuff ----

// -------- search stock items, ALS version .. can be used in other mods -- remember the popup too

// knockoff from assign_tests_v2.zul
void autoAssignTestParametersBox(String imysoftcode)
{
	istockrec = getStockMasterDetails(imysoftcode);
	if(istockrec == null) return;

	istockcat = istockrec.get("Stock_Cat");
	igroupcode = istockrec.get("GroupCode");

	populateSectionColumn(section_column,istockcat);
	populateTestParametersColumn(testparameters_column,istockcat,igroupcode);

	// auto-select the thing in the listboxes.. tricky part
	divisionln = convertCodeToLongName(als_divisions,istockcat);
	matchListboxItems(division_stockcat_lb, divisionln);
	matchListboxItems(section_groupcode_lb, igroupcode);
	tscode = istockrec.get("ID").toString();
	matchListboxItems(tests_description_lb,tscode);
}

class itemsearchDoubleClick_Listener implements org.zkoss.zk.ui.event.EventListener
{
	public void onEvent(Event event) throws UiException
	{
		selitem = founditems_lb.getSelectedItem();
		selected_test = getListcellItemLabel(selitem,0);
		autoAssignTestParametersBox(selected_test);
		//showStockItem_Metadata(selected_test);
		//newstockitem_btn.setLabel("Update test/sale item"); // change button label if item selected
		searchitem_popup.close();
	}
}

void searchStockItem_clicker()
{
Object[] finditems_lb_headers = {
	new dblb_HeaderObj("mysoftcode",false,"id",2),
	new dblb_HeaderObj("Stock.Code",true,"stock_code",1),
	new dblb_HeaderObj("Test",true,"description",1),
	new dblb_HeaderObj("Method",true,"description2",1),
	new dblb_HeaderObj("Division",true,"stock_cat",1),
	new dblb_HeaderObj("Section",true,"groupcode",1),
	};

	srchstr = replaceSingleQuotes(itemsearch_text.getValue());
	if(srchstr.equals("")) return;

	sql = als_mysoftsql();
    if(sql == NULL) return;

	sqlstatem = "select id,stock_code,description,description2,stock_cat,groupcode from stockmasterdetails where item_type='Service Item' and nominal_code like '5%' " +
		"and (stock_code like '%" + srchstr + "%' or description like '%" + srchstr + "%' or description2 like '%" + srchstr + "%') " +
		"order by description" ;

	Listbox newlb = makeVWListbox_onDB(founditems_holder,finditems_lb_headers,"founditems_lb",5,sql,sqlstatem);
	sql.close();

	if(newlb.getItemCount() > 5) newlb.setRows(10);
	if(newlb.getItemCount() > 0)
	{
		dc_obj = new itemsearchDoubleClick_Listener();
		setDoubleClick_ListItems(newlb, dc_obj);
	}
}

// -------- ENDOF search stock items, ALS version .. can be used in other mods -- remember the popup too

]]>
</zscript>

<!-- stock items search popup -->
<popup id="searchitem_popup">
<groupbox mold="3d" width="600px" style="padding:3px">
	<caption label="Search Items.." />
	<hbox>
		<label value="Search item" style="font-size:9px" />
		<textbox id="itemsearch_text" style="font-size:9px" width="200px" />
		<button label="Find" style="font-size:9px" onClick="searchStockItem_clicker()" />
	</hbox>
	<separator height="3px" />
	<div id="founditems_holder" />
</groupbox>
</popup>
<!-- end of stock items search popup -->


<!-- select customer popup -->
<popup id="selectcustomer_popup">
<div style="padding:3px">
<hbox>
<groupbox width="400px">
	<caption label="Search" />
	<hbox>
		<label value="Search text" style="font-size:9px" />
		<textbox id="cust_search_tb" width="150px" style="font-size:9px" />
		<button label="Find" style="font-size:9px" onClick="searchCustomers()" />
	</hbox>
	<separator height="3px" />
	<div id="foundcustomer_holder" />
</groupbox>

<groupbox id="custinfo_gb" width="300px" >
	<caption label="Customer info" />
	<grid>
		<columns>
			<column label="" />
			<column label="" />
		</columns>
		<rows>
		<row>
			<label value="Company" style="font-size:9px" />
			<label id="cfind_company_lbl" style="font-size:9px" />
		</row>
		<row>
			<label value="Address1" style="font-size:9px" />
			<label id="cfind_address1_lbl" style="font-size:9px" />
		</row>
		<row>
			<label value="Address2" style="font-size:9px" />
			<label id="cfind_address2_lbl" style="font-size:9px" />
		</row>
		<row>
			<label value="Address3" style="font-size:9px" />
			<label id="cfind_address3_lbl" style="font-size:9px" />
		</row>
		<row>
			<label value="Contact " style="font-size:9px" />
			<label id="cfind_contact_lbl" style="font-size:9px" />
		</row>
		<row>
			<label value="Email" style="font-size:9px" />
			<label id="cfind_email_lbl" style="font-size:9px" />
		</row>
		<row>
			<label value="Tel" style="font-size:9px" />
			<label id="cfind_tel_lbl" style="font-size:9px" />
		</row>
		<row>
			<label value="Fax" style="font-size:9px" />
			<label id="cfind_fax_lbl" style="font-size:9px" />
		</row>
		</rows>
	</grid>
</groupbox>

</hbox>
<separator height="3px" />
<button label="X Close" style="font-size:9px" onClick="selectcustomer_popup.close()" />
</div>
</popup>
<!-- ENDOF select customer popup -->

<div width="1200px">
<panel id="quotemaker_panel" title="Quotation Maker v.1.5" border="normal" collapsible="true" closable="true">
<panelchildren>
<datebox id="hiddendatebox" format="yyyy-MM-dd" visible="false" />

<hbox>
<groupbox mold="3d" width="500px" style="padding:2px">
	<caption label="The Quotations" />
	<grid>
		<columns>
			<column label="" />
			<column label="" />
		</columns>
		<rows>
			<row>
				<hbox>
					<label value="Start" style="font-size:9px" />
					<datebox id="startdate" format="yyyy-MM-dd" style="font-size:9px" />
					<label value="End" style="font-size:9px" />
					<datebox id="enddate" format="yyyy-MM-dd" style="font-size:9px" />
				</hbox>
				<hbox>
					<button label="Load my quotes by date" style="font-size:9px" onClick="showQuotations_Listbox(1)" />
					<button label="Load all quotes by date" style="font-size:9px" onClick="showQuotations_Listbox(2)" />				
				</hbox>
			</row>
			<row>
				<hbox>
					<label value="Search" style="font-size:9px" />
					<textbox id="quote_search" style="font-size:9px" />
					<button label="Dig quotes" style="font-size:9px" onClick="showQuotations_Listbox(3)" />
				</hbox>
				<hbox>
					<label value="QT" style="font-size:9px" />
					<textbox id="qtnumber_search" style="font-size:9px" />
					<button label="by number" style="font-size:9px" onClick="showQuotations_Listbox(4)" />
				</hbox>
			</row>
		</rows>
	</grid>
	<separator height="3px" />
	<div id="quotes_div" />
	<separator height="3px" />
	<hbox>
		<button label="New quote" style="font-size:9px" onClick="newQuotation_clicker()" />
		<button label="Commit" style="font-size:9px" onClick="commitQuotation_clicker()" />
		<button label="Print/Export" style="font-size:9px" onClick="printQuotation_clicker()" />
		<button label="Retire" style="font-size:9px" onClick="retireQuotation_clicker()" />
	</hbox>
	<separator height="3px" />
	<div id="admin_butts" style="background:#bb1122;padding:2px" visible="false">
		<button id="uncomitquote_btn" label="Uncommit" style="font-size:9px" onClick="adminUncomit_clicker()" />
		<button id="deletequote_btn" label="Delete" style="font-size:9px" onClick="adminDeleteQuote_clicker()" />
		<button id="harddelete_btn" label="HARD DELETE" style="font-size:9px" onClick="hardDeleteQuote_clicker()" />
	</div>
</groupbox>

<div>
<!-- tabbox and stuff for the quotation -->			
<tabbox mold="accordion">
<tabs>
	<tab id="tab1" label="Customer + other details" />
	<tab id="tab2" label="Quote items" />
</tabs>
<tabpanels>

<!-- quote metadata -->
<tabpanel>
<div id="quote_metadata_div" style="padding:3px" visible="false">
<grid>
	<columns>
		<column label="" />
		<column label="" />
		<column label="" />
		<column label="" />
	</columns>
	<rows>
	<row>
		<label value="AR.Code" style="font-size:9px" />
		<hbox>
			<textbox id="qt_ar_code" width="60px" style="font-size:9px" /> <!-- droppable="true" onDrop="dropAR_Code(event)" /> -->
			<button id="assign_customer_btn" label="Get customer" style="font-size:9px" onClick="playAssignCustomerWindow()" />
			<label id="cfind_holder" />
		</hbox>
		<label value="Customer.Name" style="font-size:9px" />
		<textbox id="qt_customer_name" width="270px" style="font-size:9px" />
	</row>
	<row>
		<label value="Contact.Person" style="font-size:9px" />
		<textbox id="qt_contact_person1" width="200px" style="font-size:9px" />
		<label value="Email" style="font-size:9px" />
		<textbox id="qt_email" width="200px" style="font-size:9px" />	
	</row>
	<row spans=",3">
		<label value="Address 1" style="font-size:9px" />
		<textbox id="qt_address1" width="350px" style="font-size:9px" />
	</row>
	<row spans=",3">
		<label value="Address 2" style="font-size:9px" />
		<textbox id="qt_address2" width="350px" style="font-size:9px" />
	</row>
	<row>
		<label value="Zip" style="font-size:9px" />
		<textbox id="qt_zipcode" width="180px" style="font-size:9px" />
		<label value="City" style="font-size:9px" />
		<textbox id="qt_city" width="180px" style="font-size:9px" />
	</row>
	<row>
		<label value="State" style="font-size:9px" />
		<textbox id="qt_state" width="180px" style="font-size:9px" />
		<label value="Country" style="font-size:9px" />
		<textbox id="qt_country" width="180px" style="font-size:9px" />	
	</row>
	<row>
		<label value="Telephone" style="font-size:9px" />
		<textbox id="qt_telephone" width="180px" style="font-size:9px" />
		<label value="Fax" style="font-size:9px" />
		<textbox id="qt_fax" width="180px" style="font-size:9px" />	
	</row>
	<row spans=",3">
		<label value="Notes" style="font-size:9px" />
		<textbox id="qt_notes" multiline="true" width="465px" height="80px" style="font-size:9px" />	
	</row>
	<row>
		<label value="Currency" style="font-size:9px" />
		<listbox id="qt_curcode" mold="select" style="font-size:9px" />
		<zscript>
			populateDropdownListbox(qt_curcode,currencycode);
		</zscript>	
		<label value="Exch.Rate" style="font-size:9px" />
		<decimalbox id="qt_exchangerate" format="#.#" style="font-size:9px" value="1" />
	</row>
	<row>
		<label value="Terms" style="font-size:9px" />
		<div id="terms_holder" />
		<label value="Salesman" style="font-size:9px" />
		<div id="salesman_holder" />
	</row>
	</rows>
</grid>
<separator height="3px" />
<button id="savequote_btn" label="Save quotation metadata" style="font-size:9px" onClick="saveQuotation_clicker()" />
</div>
</tabpanel>

<!-- actual quote items -->
<tabpanel>
<div id="quoteitems_meta_div" style="padding:3px" visible="false">
	<div id="quote_items_div" style="padding:2px" />
	<div style="background:#EE8866;padding:3px">
	<hbox>
		<separator width="300px" />
		<label id="quoteitems_grandtotal_lbl" style="font-size:11px;font-weight:bold" />
	</hbox>
	</div>
	<separator height="3px" />
	<grid>
		<columns>
			<column label="" />
			<column label="" />
			<column label="" />
			<column label="" />
		</columns>
		<rows>
		<row spans=",3">
			<label value="Item.Name" style="font-size:9px" />
			<textbox id="qi_description" width="300px" style="font-size:9px" />
		</row>
		<row spans=",3">
			<label value="Method/Notes" style="font-size:9px" />
			<textbox id="qi_description2" multiline="true" height="60px" width="300px" style="font-size:9px" />
		</row>
		<row>
			<label id="qi_uprice_lbl" value="Unit price" style="font-size:9px" />
			<textbox id="qi_unitprice" style="font-size:9px" />
			<label value="Quantity" style="font-size:9px" />
			<textbox id="qi_quantity" width="50px" style="font-size:9px" value="1" />
		</row>
		<row>
			<label id="qi_discount_lbl" value="Discount" style="font-size:9px" />
			<textbox id="qi_discount" style="font-size:9px" />
			<label value="LOR" style="font-size:9px" />
			<textbox id="qi_lor" style="font-size:9px" />
		</row>
		</rows>
	</grid>
	<separator height="3px" />
	<hbox>
		<button label="Clear fields" style="font-size:9px" onClick="clearQuoteItem_inputs()" />
		<button id="editquoteitem_btn" label="New.." style="font-size:9px" onClick="updateQuoteItem_clicker()" />
		<button id="deletequoteitem_btn" label="Delete" style="font-size:9px" onClick="deleteQuoteItem_clicker()" />
		<separator width="5px" />
		<button id="quotepackage_btn" label="Quote package" style="font-size:9px" />
	</hbox>
</div>
</tabpanel>

</tabpanels>
</tabbox>			
<!-- end of tabbox for quotation -->

</div>
</hbox>

<separator height="3px" />
<button id="searchitem_btn" label="Search test" style="font-size:9px" onClick="searchitem_popup.open(searchitem_btn)" />
<separator height="3px" />

<hbox>
<groupbox mold="3d" width="150px">
	<caption label="Division" />
	<div id="division_column" />
</groupbox>

<groupbox mold="3d" width="150px">
	<caption label="Section" />
	<div id="section_column" />
</groupbox>

<groupbox mold="3d">
	<caption label="Test Parameters" />
	<div id="testparameters_column" />
	<separator height="3px" />
	<button id="insertitem_btn" label="$$ Insert item $$" style="font-size:9px" visible="false" onClick="addQuoteItems_clicker()" />
</groupbox>
</hbox>

</panelchildren>
</panel>
</div>

<zscript>
<![CDATA[

setTodayDatebox(hiddendatebox);
setTodayDatebox(startdate);
setTodayDatebox(enddate);

populateDivisionColumn(division_column);

populateSalesman_dropdown(salesman_holder);
populateTerms_dropdown(terms_holder);

// Admin only stuff to show else hidden
if(useraccessobj.accesslevel > 8)
{
	admin_butts.setVisible(true);
}

]]>
</zscript>
</zk>
