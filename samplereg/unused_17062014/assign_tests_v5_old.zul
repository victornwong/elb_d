<?xml version="1.0" encoding="UTF-8"?>
<?page id="assigntests_panel5"?>
<zk>
<zscript src="../alsglobal/alsglobaldefs.zs" />
<zscript src="../alsglobal/alsglobalfuncs.zs" />
<zscript src="../alsglobal/alsglobal_guifuncs.zs" />
<zscript src="../alsglobal/alsglobal_sqlfuncs.zs" />
<zscript src="../alsglobal/samplereg_funcs.zs" />
<zscript src="../alsglobal/securityfuncs.zs" />
<zscript src="../alsglobal/doculink_funcs.zs" />
<zscript src="../alsglobal/divisiongroup_funcs.zs" />
<zscript src="../alsglobal/testpackage_funcs.zs" />
<zscript src="../alsglobal/repeatstuff.zs" />
<zscript>
<![CDATA[
/*
Version		: 5.0
Title		: Assign test parameters to LOGGED folders
Written by	: Victor Wong

Revisions:

04/10/2011: total recode - simpler interface

*/
import java.util.*;
import java.text.*;
import java.io.*;

import groovy.sql.Sql;
import org.zkoss.zk.ui.*;
import org.zkoss.util.media.AMedia;

myincludeid = Executions.getCurrent().getParameter("myid");
useraccessobj = getUserAccessObject();
if(useraccessobj == null) Executions.sendRedirect(MAINLOGIN_PAGE);
/*
boolean can_access = check_UsergroupAccess(useraccessobj.origid,SAMPREG_USERGROUP,SAMPREG_ACCESSLEVEL);
if(!can_access)
{
	showAccessDenied_Box(useraccessobj);
	globalClosePanel(myincludeid);
}
*/

public class folderListObject
{
	public String origid;
	public String folderno_str;
	public String ar_code;
	public String customer_name;
	public int overdue; // 1=wip and not overdue, 2=overdue and in wip, 3=released
}

FOLDERPICK_COLOR = "background:#AAAAAA";
OVERDUE_ROWCOLOR = "background:#F74623";
RELEASED_ROWCOLOR = "background:#AEF520";

last_foldersearch_type = 0;
global_selected_arcode = "";
global_selected_folderno = "";
selected_folderno = ""; // used by repeatstuff.zs
global_selected_origid = "";
global_selected_customername = "";

ArrayList mainFolderList;
Object prevSelectedFolder = null;
String prevSelectedFolder_style = "";

foldermeta_area_toggler = false;
foldermeta_loaded = false;

prev_findfolder_toggle = true;

documentLinkObj documentLinkProp = new documentLinkObj();

class foldersOnSelect implements org.zkoss.zk.ui.event.EventListener
{
	public void onEvent(Event event) throws UiException
	{
		selrow = event.getTarget();

		if(prevSelectedFolder != null)
		{
			if(prevSelectedFolder != selrow)
			{
				if(prevSelectedFolder_style.equals(""))
					prevSelectedFolder.setStyle(null);
				else
					prevSelectedFolder.setStyle(prevSelectedFolder_style);
			}
			else
				return; // selected same as previous, return - don't waste cpu
		}

		prevSelectedFolder_style = (selrow.getStyle() == null) ? "" : selrow.getStyle();
		prevSelectedFolder = selrow;
		selrow.setStyle(FOLDERPICK_COLOR);

		selid = selrow.getId();
		selid = selid.substring(2,selid.length());
		
		for(dpi : mainFolderList)
		{
			if(dpi.origid.equals(selid))
			{
				global_selected_origid = dpi.origid;
				global_selected_arcode = dpi.ar_code;
				global_selected_folderno = dpi.folderno_str;
				selected_folderno = dpi.folderno_str;
				global_selected_customername = dpi.customer_name;

				//showTestAssigned(global_selected_origid);

				foldermeta_area_toggler = false;
				foldermeta_loaded = false;
				foldermeta_area.setVisible(false);

				// folder->tests caption
				foldercaption_lbl.setValue(global_selected_folderno);
				companyname_lbl.setValue(global_selected_customername);

				showDocumentsList(global_selected_folderno); // show docs for this folder

				// hide folder-finder box
				findfolders_gb.setVisible(false);
				prev_findfolder_toggle = false;

				foldermetadocs_holder.setVisible(true);

				break;
			}
		}
	}
}

String[] folderListHeaders = {"Folder","Dated","Due","Customer","SC","F.Status","LabStat","Brh","PKD","Share" };

// recoded from startFolderJobsSearch() in v2 - cleaner and uses grid instead of listbox
// itype: 1=by date and searchtext, 2=by folder no, 3=by sample id, 4=by share-sample,5=by pkd,6=by salesman, 7=by credit-term
void loadFoldersList(int itype)
{
	last_foldersearch_type = itype;

	sdate = getDateFromDatebox(startdate);
    edate = getDateFromDatebox(enddate);
	searchtext = replaceSingleQuotes(customer_tb.getValue());
	byfold = replaceSingleQuotes(byfolder_tb.getValue());
	bysamp = replaceSingleQuotes(bysampleid_tb.getValue());
	sharesmp = share_sample.getSelectedItem().getLabel();
	creditm = customer_terms_lb.getSelectedItem().getLabel();

	sqlstm_head = "select top 300 jf.origid, jf.ar_code, jf.datecreated, jf.folderstatus, jf.branch," + 
	"jf.duedate, jf.tat, jf.folderno_str, jf.labfolderstatus, jf.pkd_samples, jf.share_sample, jf.coadate, " +
	"customer.customer_name, csci.customer_name as cashcustomer " +
	"from jobfolders jf " +
	"left join customer on customer.ar_code = jf.ar_code " +
	"left join jobsamples js on js.jobfolders_id = jf.origid " +
	"left join cashsales_customerinfo csci on csci.folderno_str = jf.folderno_str " +
	"where jf.deleted=0 and jf.folderstatus in ('" + FOLDERLOGGED + "') ";
	
	sqlstm_foot = "group by jf.origid, jf.ar_code, jf.datecreated, jf.folderstatus, jf.branch," + 
	"jf.duedate, jf.tat, jf.folderno_str, jf.labfolderstatus, jf.pkd_samples, jf.share_sample, jf.coadate, " +
	"customer.customer_name, csci.customer_name " +
	"order by jf.datecreated desc";

	bystext = "";
	bydate = "and jf.datecreated between '" + sdate + "' and '" + edate + "' ";
	switch(itype)
	{
		case 2:
			bydate = " ";
			bystext = "and jf.folderno_str like '%" + byfold + "%' ";
			break;

		case 3:
			bydate = " ";		
			bystext = "and js.sampleid_str like '_________%" + bysamp + "%' ";
			break;
			
		case 4:
			bystext = "and jf.share_sample='" + sharesmp + "' ";
			break;
			
		case 5:
			bystext = "and pkd_samples=1 ";
			break;
			
		case 6:
			selitem = qt_salesperson.getSelectedItem();
			salesp = getListcellItemLabel(selitem,1);
			if(salesp.equals("None")) return;
			bystext = "and customer.salesman_code='" + salesp + "' ";
			break;
			
		case 7: // by credit-term
			bystext = "and customer.credit_period='" + creditm + "' ";
			break;

		default:
			if(!searchtext.equals("")) bystext = "and (customer.customer_name like '%" + searchtext + "%' " + 
			"or csci.customer_name like '%" + searchtext + "%') ";
			break;
	}

	sqlstm = sqlstm_head + bydate + bystext + sqlstm_foot;

    sql = als_mysoftsql();
    if(sql == NULL) return;
    therecs = sql.rows(sqlstm);

	if(therecs.size() == 0) { sql.close(); return; }
	
	// remove previous grid
	if(folders_searchdiv.getFellowIfAny("folders_lb") != null) folders_lb.setParent(null);

	mainFolderList = new ArrayList();

	thegrid = new Grid();
	thegrid.setId("folders_lb");

	gridrows = gridMakeRows("","",thegrid);
	makeGridHeaderColumns(folderListHeaders, thegrid);

	todate = hiddendatebox.getValue();
	overduecount=0;
	releasedcount=0;

	for(dpi : therecs)
	{
		// Store folder metadata
		ifolder = new folderListObject();
		ifolder.origid = dpi.get("origid").toString();
		ifolder.folderno_str = dpi.get("folderno_str");
		ifolder.ar_code = dpi.get("ar_code");

		if(dpi.get("ar_code").equals("CASH"))
			ifolder.customer_name = dpi.get("cashcustomer");
		else
			ifolder.customer_name = dpi.get("customer_name");

		// process overdue bar-color
		duedate = dpi.get("duedate");

		ifolder.overdue = 1;
		if(todate.compareTo(duedate) >= 0 && dpi.get("labfolderstatus").equals("WIP"))
			ifolder.overdue = 2;
		else
			ifolder.overdue = 3;

		overduestyle = "";
		labelstyle = "";

		switch(ifolder.overdue)
		{
			case 2:
				overduestyle = OVERDUE_ROWCOLOR;
				labelstyle = "color:#ffffff;font-size:9px;font-weight:bold";
				overduecount++;
				break;
			case 3:
				if(dpi.get("labfolderstatus").equals("RELEASED"))
				{
					overduestyle= RELEASED_ROWCOLOR;
					labelstyle = "color:#222222;font-size:9px";
					releasedcount++;
				}
				break;
		}

		mainFolderList.add(ifolder);

		theid = "FR" + ifolder.origid;
		folder_row = gridMakeRow(theid,overduestyle,"",gridrows);
		//folder_row.setStyle("background:#AA0000");
		folder_row.addEventListener("onClick", new foldersOnSelect());
		
		makeLabelToParent(dpi.get("folderno_str"),labelstyle,folder_row);
		makeLabelToParent(dpi.get("datecreated").toString().substring(0,10),labelstyle,folder_row);
		makeLabelToParent(dpi.get("duedate").toString().substring(0,10),labelstyle,folder_row);

		icompanyname = "Undefined";
		iar_code = dpi.get("ar_code");

		if(iar_code != null)
		{
			iar_code = iar_code.toUpperCase().trim();

			if(iar_code.equals("CASH") || iar_code.equals("CASH USD") || iar_code.equals("300S-550"))
			{
				icompanyname = "CshAcct: ";
				if(iar_code.equals("300S-550")) // syabas contractor
					icompanyname = "Syabas: ";

				if(dpi.get("cashcustomer") != null)
					icompanyname += dpi.get("cashcustomer");
				else
					icompanyname += "UNKNOWN";
			}
			else
				icompanyname = checkNullString_RetWat(dpi.get("customer_name"),"Undefined");
		}

		makeLabelToParent(icompanyname,labelstyle,folder_row);

		// Count num of samples in folder
		sqlstm3 = "select count(js.origid) as samplecount from jobsamples js " +
		"left join jobfolders jf on js.jobfolders_id = jf.origid " +
		"where js.deleted=0 and jf.origid=" + ifolder.origid;
		
		scs = sql.firstRow(sqlstm3);
		scount = 0;
		if(scs != null) scount = scs.get("samplecount");
		makeLabelToParent(scount.toString(),labelstyle,folder_row);		

		makeLabelToParent(dpi.get("folderstatus"),labelstyle,folder_row);
		makeLabelToParent(checkNullString(dpi.get("labfolderstatus")),labelstyle,folder_row);

		makeLabelToParent(dpi.get("branch"),labelstyle,folder_row);

		pkdwop = "---";
		if(dpi.get("pkd_samples") != null) pkdwop = (dpi.get("pkd_samples") == 0) ? "---" : "-Y-";
		makeLabelToParent(pkdwop,labelstyle,folder_row);
		makeLabelToParent(checkNullString_RetWat(dpi.get("share_sample"),"---"),labelstyle,folder_row);
	
	}

	sql.close();

	numofsamples_lbl.setValue(therecs.size().toString());
	overdue_count_lbl.setValue(overduecount.toString());
	released_count_lbl.setValue(releasedcount.toString());
	wip_lbl.setValue((therecs.size()-releasedcount).toString()); 

	thegrid.setParent(folders_searchdiv);

	folderworkbutts.setVisible(true);
	folderworkarea.setVisible(true);
}

// 7/1/2011: change share-folder flag
void changeShareSample_clicker()
{
	if(global_selected_origid.equals("")) return;
	newss = share_sample2.getSelectedItem().getLabel();
	sql = als_mysoftsql();
	if(sql == NULL) return;
	sqlstm = "update JobFolders set share_sample='" + newss + "' where origid=" + global_selected_origid;
	sql.execute(sqlstm);
	sql.close();
	loadFoldersList(last_foldersearch_type); // refresh
}

// generate/print draft-report
void printDraftReport()
{
	if(global_selected_origid.equals("")) return;
	theparam = "folder_no=" + global_selected_origid;
	uniqwindowid = makeRandomId("pdrf");
	globalActivateWindow("miscwindows","lab/print_drafttemplate.zul", uniqwindowid, theparam, useraccessobj);
}

// Same wrapper func to print SRA .. 
void printSRA_Wrapper()
{
	if(global_selected_folderno.equals("")) return;
	printSRA(global_selected_folderno); // samplereg_funcs.zs
}

// 11/8/2010: to show cash-account details, stored in a diff table mah..
void showCashAccountDetails_clicker()
{
	if(global_selected_folderno.equals("")) return;
	
	// clear 'em boxes
	ca_customer_name_tb.setValue("");
	ca_contact_person1_tb.setValue("");
	ca_address1_tb.setValue("");
	ca_address2_tb.setValue("");
	ca_city_tb.setValue("");
	ca_zipcode_tb.setValue("");
	ca_state_tb.setValue("");
	ca_country_tb.setValue("");
	ca_telephone_tb.setValue("");
	ca_fax_tb.setValue("");
	ca_email_tb.setValue("");

	csrec = getCashSalesCustomerInfo_Rec(global_selected_folderno);
	if(csrec == null) return;
	ca_customer_name_tb.setValue(csrec.get("customer_name"));
	ca_contact_person1_tb.setValue(csrec.get("contact_person1"));
	ca_address1_tb.setValue(csrec.get("address1"));
	ca_address2_tb.setValue(csrec.get("address2"));
	ca_city_tb.setValue(csrec.get("city"));
	ca_zipcode_tb.setValue(csrec.get("zipcode"));
	ca_state_tb.setValue(csrec.get("state"));
	ca_country_tb.setValue(csrec.get("country"));
	ca_telephone_tb.setValue(csrec.get("telephone"));
	ca_fax_tb.setValue(csrec.get("fax"));
	ca_email_tb.setValue(csrec.get("email"));

	cashfolder_details.setVisible(true);
}

void showFolderMetadata()
{
	if(global_selected_origid.equals("")) return;
	if(!foldermeta_loaded)
	{
		cashfolder_details.setVisible(false);
		if(global_selected_arcode.equals("CASH") || global_selected_arcode.equals("CASH USD") || global_selected_arcode.equals("300S-550"))
			showCashAccountDetails_clicker(); // load cash-account details if this folder is

		foldermeta_loaded = true;
	}

	foldermeta_area_toggler = (foldermeta_area_toggler) ? false : true;
	foldermeta_area.setVisible(foldermeta_area_toggler);
}

void showFolderDetails()
{
	if(global_selected_origid.equals("")) return;
	theparam = "folderno=" + global_selected_folderno;
	uniqwindowid = makeRandomId("ldx");
	globalActivateWindow("miscwindows","samplereg/folderjobs_driller.zul", uniqwindowid, theparam, useraccessobj);
}

// export list of folders to Excel
// can make this into multi-purpose func later
void kasiExport_clicker()
{
	gridrows = null;
	
	for(kobj : folders_lb.getChildren())
	{
		if(kobj instanceof Rows) gridrows = kobj;
	}

	if(gridrows == null) return;
	
	ifilename = "folderslist.xls";
	isheetname = "FoldersList";

	// Uses Apache POI stuff
	HSSFWorkbook wb = new HSSFWorkbook();
	thefn = session.getWebApp().getRealPath("tmp/" + ifilename);
	FileOutputStream fileOut = new FileOutputStream(thefn);
	sheet = wb.createSheet(isheetname);

	stylo = wb.createCellStyle();
	stylo.setFillBackgroundColor((short)210);
	
	// Header row - folderListHeaders def above
	row1 = sheet.createRow(0);
	for(i=0; i < folderListHeaders.length; i++)
	{
		hedc = row1.createCell(i);
		hedc.setCellValue(folderListHeaders[i]);
		hedc.setCellStyle(stylo);
	}

	cellstylo = wb.createCellStyle();
	cellstylo.setWrapText(true);

	rowcount = 1;

	for(robj : gridrows.getChildren())
	{
		if(robj instanceof Row)
		{
			row = sheet.createRow(rowcount);

			colcount = 0;
			for(lobj : robj.getChildren())
			{
				if(lobj instanceof Label)
				{
					labelval = lobj.getValue();
					row.createCell(colcount).setCellValue(labelval);
				}
				colcount++;
			}

			rowcount++;
		}	
	}
	
	ps = sheet.getPrintSetup();
	ps.setScale((short)70);

	wb.write(fileOut);
	fileOut.close();

	// long method to let user download a file	
	File f = new File(thefn);
	fileleng = f.length();
	finstream = new FileInputStream(f);
	byte[] fbytes = new byte[fileleng];
	finstream.read(fbytes,0,(int)fileleng);

	AMedia amedia = new AMedia(ifilename, "xls", "application/vnd.ms-excel", fbytes);
	Iframe newiframe = new Iframe();
	newiframe.setParent(kasiexport_holder);
	newiframe.setContent(amedia);
}

// find folders groupbox toggler, give user more space to work
void toggleFindFoldersGb()
{
	prev_findfolder_toggle = (!prev_findfolder_toggle) ? true : false;
	findfolders_gb.setVisible(prev_findfolder_toggle);
}

]]>
</zscript>

<!-- documents management popup , things needed by repeatstuff.zs-->
<popup id="doculink_popup">
<div width="400px">
<include id="linkingdoc_include" src="alsglobal/doculink.zul"/>
<separator height="5px" />
<hbox>
	<button label="Close" onClick="showDocumentsList(selected_folderno); doculink_popup.close()" style="font-size:9px" />
</hbox>
</div>
</popup>
<!-- ENDOF documents management popup -->

<div width="1200px">
<panel id="assigntests_panel5" title="Assign Test Parameters v.5" border="normal" collapsible="true" closable="true" >
<panelchildren>
<!-- <button label="X Close panel" style="font-size:9px" onClick="assign_tests_panel.setParent(null)" /> -->
<datebox id="hiddendatebox" format="yyyy-MM-dd" visible="false" />

<button id="showhide_findfolders_btn" label="Show folders finder" style="font-size:9px" onClick="toggleFindFoldersGb()" />

<hbox>

<vbox>
<groupbox mold="3d" width="100%" id="findfolders_gb" visible="true">
<!-- search boxes -->
<hbox>
	<grid width="300px">
		<rows>
			<row>
				<label value="Start date" style="font-size:9px" />
				<datebox id="startdate" format="yyyy-MM-dd" style="font-size:9px" />
				<label value="End date" style="font-size:9px" />
				<datebox id="enddate" format="yyyy-MM-dd" style="font-size:9px" />
			</row>
			<row spans=",2,">
				<label value="Customer" style="font-size:9px" />
				<textbox id="customer_tb" width="99%" style="font-size:9px" />
				<button label="Load" style="font-size:9px" onClick="loadFoldersList(1)" />
			</row>
			<row spans="4">
				<label style="font-size:8px">
				Will only load LOGGED folders - If you cannot find the folder here, most probably it is in DRAFT.
				(Max. 200 folders per click)
				</label>
			</row>
		</rows>
	</grid>
	<grid width="250px">
		<rows>
			<row>
				<label value="By folder" style="font-size:9px" />
				<textbox id="byfolder_tb" style="font-size:9px" />
				<button label="Dig" style="font-size:9px" onClick="loadFoldersList(2)" />
			</row>
			<row>
				<label value="By sample.ID" style="font-size:9px" />
				<textbox id="bysampleid_tb" style="font-size:9px" />
				<button label="Dig" style="font-size:9px" onClick="loadFoldersList(3)" />
			</row>
			<row spans="3">
				<button label="Dig by PKD" style="font-size:9px" onClick="loadFoldersList(5)" />
			</row>
		</rows>
	</grid>
	<grid width="300px">
		<rows>
			<row>
				<listbox id="share_sample" mold="select" style="font-size:9px" />
				<zscript>
					populateDropdownListbox(share_sample,sharesamplechop);
				</zscript>
				<button label="Dig by share-samples" style="font-size:9px" onClick="loadFoldersList(4)" />
			</row>
			<row>
				<div id="salesman_holder" />
				<button label="Dig by salesman" style="font-size:9px" onClick="loadFoldersList(6)" />
			</row>
			<row>
				<div id="customerterms_holder" />
				<button label="Dig by credit-terms" style="font-size:9px" onClick="loadFoldersList(7)" />
			</row>
		</rows>
	</grid>
</hbox> 
<!-- ENDOF search boxes -->
</groupbox>

<groupbox mold="3d" id="folderworkbutts" visible="false">
<div>
	<div id="adminstuffy" style="padding:2px;background:#bb1122" visible="false">
		<hbox>
			<label value="AdminStuff:" style="color:#ffffff;font-weight:bold" />
			<separator width="5px" />
			<button id="cancelfolder_btn" label="Cancel folder" style="font-size:9px" onClick="cancelFolder()" />
			<button id="ass_customer_btn" label="Change customer" style="font-size:9px" onClick="popupCustomerPicker_clicker()" />

			<!-- <button label="Notify unmod cashfolder" style="font-size:9px" onClick="admin_NotifyCashFolders()" /> -->
			<!-- <textbox id="adminboxi" multiline="true" width="250px" height="80px" style="font-size:9px" /> -->
			<!-- <button id="sendsrn_button" label="sendSRN" visible="false" style="font-size:9px" onClick="sendSRN_email()" /> -->
		</hbox>
	</div>
	<separator height="2px" />
	<hbox>
		<button label="CashAcct details" style="font-size:9px" onClick="showFolderMetadata()" />
		<button label="Print SRA" style="font-size:9px" onClick="printSRA_Wrapper()" />
		<button label="Generate Draft-Report" style="font-size:9px" onClick="printDraftReport()" />
		<button id="exportlist_btn" label="Export list to Excel" style="font-size:9px" onClick="kasiExport_clicker()" />

		<label value="Reset Share-Sample" style="font-size:9px" />
		<listbox id="share_sample2" mold="select" style="font-size:9px" />
		<zscript>
			populateDropdownListbox(share_sample2,sharesamplechop);
		</zscript>
		<button label="Change" style="font-size:9px" onClick="changeShareSample_clicker()" />

	</hbox>
</div>
<!-- ENDOF folder handling buttons -->
</groupbox>

<!-- folder metadata area -->
<groupbox id="foldermeta_area" mold="3d" visible="false">
<hbox>

<grid id="cashfolder_details" visible="false">
	<rows>
		<row spans="4" style="background:#555555">
			<label value="Cash account customer details" style="color:#ffffff" />
		</row>
		<row>
			<label value="Cust.Name" style="font-size:9px" />
			<textbox id="ca_customer_name_tb" width="200px" style="font-size:9px" />
			<label value="Cont.Person" style="font-size:9px" />
			<textbox id="ca_contact_person1_tb" width="200px" style="font-size:9px" />
		</row>
		<row>
			<label value="Address1" style="font-size:9px" />
			<textbox id="ca_address1_tb" width="200px" style="font-size:9px" />
			<label value="City" style="font-size:9px" />
			<textbox id="ca_city_tb" width="200px" style="font-size:9px" />
		</row>
		<row>
			<label value="Address2" style="font-size:9px" />
			<textbox id="ca_address2_tb" width="200px" style="font-size:9px" />
			<label value="Zipcode" style="font-size:9px" />
			<textbox id="ca_zipcode_tb" width="200px" style="font-size:9px" />
		</row>
		<row>
			<label value="State" style="font-size:9px" />
			<textbox id="ca_state_tb" width="200px" style="font-size:9px" />
			<label value="Country" style="font-size:9px" />

			<textbox id="ca_country_tb" width="200px" style="font-size:9px" />		
		</row>
		<row>
			<label value="Telephone" style="font-size:9px" />
			<textbox id="ca_telephone_tb" width="200px" style="font-size:9px" />
			<label value="Fax" style="font-size:9px" />
			<textbox id="ca_fax_tb" width="200px" style="font-size:9px" />		
		</row>
		<row>
			<label value="Email" style="font-size:9px" />
			<textbox id="ca_email_tb" width="200px" style="font-size:9px" />		
		</row>
	</rows>
</grid>

</hbox>
</groupbox>
<!-- ENDOF folder metadata area -->

<!-- search results box and tests box -->
<div id="folderworkarea" style="padding:2px" visible="false">
<hbox>
	<vbox>
		<grid>
			<rows>
				<row style="background:#CCCCCC">
					<div style="background:#FAC116">
					<label value="Found" />
					<label id="numofsamples_lbl" />
					</div>

					<div style="background:#F74623">
						<label value="OVERDUES" />
						<label id="overdue_count_lbl" style="color:#ffffff;font-weight:bold"/>
					</div>

					<div style="background:#AEF520">
						<label value="Released" />
						<label id="released_count_lbl" style="color:#222222;font-weight:bold"/>
					</div>

					<div style="background:#FAC116">
					<label value="WIP" />
					<label id="wip_lbl" />
					</div>
					
					<label style="font-size:9px;font-weight:bold">
(RED = OVERDUE folders, GREEN = RELEASED folders)
</label>
					
				</row>
			</rows>
		</grid>
		<!-- holder for folders found -->
		<div id="folders_searchdiv" width="700px" height="250px" style="border:1px solid gray;overflow:auto;padding:2px;" />
	</vbox>
	
	<vbox>
		<div id="foldermetadocs_holder" width="100%" visible="false">
		<grid>
			<rows>
				<row style="background:#333333">
					<label id="foldercaption_lbl" style="font-weight:bold;color:#ffffff" />
					<label id="companyname_lbl" style="font-weight:bold;color:#ffffff" />
				</row>
			</rows>
		</grid>

		<button label="More folder details" style="font-size:9px" onClick="showFolderDetails()" />

		<groupbox mold="3d">
			<div id="doculist_holder" />
			<separator height="3px" />
			<button label="View document" style="font-size:9px" onClick="viewDocument()" />
			<button id="viewdoculinks_btn" label="Upload COC/PO/Documents" onClick="doViewDoculinkPopup()" style="font-size:9px" />
			<!-- <button id="sendemail_doc_btn" label="E-Mail" style="font-size:9px" onClick="sendDocViaEmail_clicker()" visible="false" /> -->
		</groupbox>

		<!-- <div id="foldertests_holder" width="400px" height="300px" style="border:1px solid gray;overflow:auto;padding:2px;" /> -->
		</div>
	</vbox>
</hbox>
</div>
<!-- ENDOF search results box and tests box -->

</vbox>

</hbox>

<div id="kasiexport_holder" />


<zscript>
<![CDATA[

setTodayDatebox(startdate);
setTodayDatebox(enddate);
setTodayDatebox(hiddendatebox);

populateSalesman_dropdown(salesman_holder); // repeatstuff.zs
populateCustomerTerms_dropdown(customerterms_holder);

//startFolderJobsSearch(startdate,enddate,customer_tb,1);

documentLinkProp.document_idprefix = "DOCS";
setDocumentLink_DynamicProperty(linkingdoc_include, documentLinkProp, useraccessobj);

if(useraccessobj.accesslevel == 9 || validSupervisor(useraccessobj.username))
{
//	adminstuffy.setVisible(true);
//	sendemail_doc_btn.setVisible(true);
//	sendsrn_button.setVisible(true);

}

]]>
</zscript>
</panelchildren>
</panel>
</div>
</zk>
